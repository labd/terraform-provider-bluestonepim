{
  "security": [
    {
      "mapiKey": []
    }
  ],
  "components": {
    "schemas": {
      "AllProductMetadataUpdateRequest": {
        "type": "object",
        "properties": {
          "description": {
            "title": "A value specifying the product description.",
            "type": "string"
          },
          "name": {
            "title": "A value specifying the product name.",
            "type": "string"
          },
          "number": {
            "title": "A value specifying the product number.",
            "type": "string"
          }
        }
      },
      "AssetIdListViewsRequestDto": {
        "required": [
          "assetIds"
        ],
        "type": "object",
        "properties": {
          "assetIds": {
            "title": "Asset IDs that will be returned.",
            "maxItems": 100,
            "minItems": 0,
            "type": "array",
            "items": {
              "title": "Asset IDs that will be returned.",
              "type": "string"
            }
          },
          "page": {
            "title": "A number sequence representing a block of items to return as a result set.",
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "title": "Size of a block of items to return. It corresponds with the page parameter.",
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "views": {
            "title": "List of entities views.",
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/AssetsFilteringViewsDto"
                },
                {
                  "$ref": "#/components/schemas/AttributesFilteringViewsDto"
                },
                {
                  "$ref": "#/components/schemas/BundlesFilteringViewsDto"
                },
                {
                  "$ref": "#/components/schemas/CategoriesFilteringViewsDto"
                },
                {
                  "$ref": "#/components/schemas/LabelsFilteringViewsDto"
                },
                {
                  "$ref": "#/components/schemas/MetadataFilteringViewsDto"
                },
                {
                  "$ref": "#/components/schemas/RelatedCategoriesFilteringViewsDto"
                },
                {
                  "$ref": "#/components/schemas/RelatedProductsFilteringViewsDto"
                },
                {
                  "$ref": "#/components/schemas/VariantsFilteringViewsDto"
                }
              ]
            }
          }
        }
      },
      "AssetsFilteringViewsDto": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/FilteringViewsDto"
          }
        ]
      },
      "AssignProductsToCategoryRequest": {
        "type": "object",
        "properties": {
          "categoryId": {
            "title": "ID of the category to which products will be assigned.",
            "type": "string"
          },
          "productIds": {
            "title": "A set of product IDs.",
            "maxItems": 100,
            "minItems": 1,
            "uniqueItems": true,
            "type": "array",
            "items": {
              "title": "A set of product IDs.",
              "type": "string"
            }
          }
        }
      },
      "AssociateProductAssetsRequest": {
        "type": "object",
        "properties": {
          "assets": {
            "title": "List of asset ids to assign.",
            "maxItems": 100,
            "minItems": 1,
            "type": "array",
            "items": {
              "title": "List of asset ids to assign.",
              "type": "string"
            }
          }
        }
      },
      "AttributeDefinitionDeleteResponse": {
        "type": "object",
        "properties": {
          "numberOfAlteredCompoundAttributeDefinitions": {
            "title": "Number of altered compound attribute definitions.",
            "type": "integer",
            "format": "int64"
          },
          "numberOfDeletedCategoryLevelAttributes": {
            "title": "Number of deleted category level attributes.",
            "type": "integer",
            "format": "int64"
          },
          "numberOfDeletedProductAttributes": {
            "title": "Number of deleted product attributes.",
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "AttributeDefinitionFilterDto": {
        "title": "List of attribute definition filters.",
        "type": "object",
        "properties": {
          "type": {
            "title": "Attribute definition filter type.",
            "type": "string",
            "enum": [
              "NUMBER_IN",
              "ID_IN"
            ]
          },
          "values": {
            "title": "Values of attribute definition related to filter type.",
            "maxItems": 2147483647,
            "minItems": 1,
            "type": "array",
            "items": {
              "title": "Values of attribute definition related to filter type.",
              "type": "string"
            }
          }
        }
      },
      "AttributeDefinitionFilteringRequestDto": {
        "type": "object",
        "properties": {
          "filters": {
            "title": "List of attribute definition filters.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttributeDefinitionFilterDto"
            }
          },
          "page": {
            "title": "A number sequence representing a block of items to return as a result set.",
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "title": "Size of a block of items to return. It corresponds with the page parameter.",
            "maximum": 1000,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "AttributeDefinitionIdDto": {
        "title": "List of identifiers randomly generated by PIM. ID is unique across all attribute definitions.",
        "type": "object",
        "properties": {
          "id": {
            "title": "An identifier randomly generated by PIM. ID is unique across all attribute definitions.",
            "type": "string"
          }
        }
      },
      "AttributeDefinitionMetadataUpdateRequest": {
        "type": "object",
        "properties": {
          "description": {
            "$ref": "#/components/schemas/PropertyUpdateString"
          },
          "externalSource": {
            "title": "Derived from external source.",
            "type": "boolean"
          },
          "internal": {
            "title": "Flag of internal use only.",
            "type": "boolean"
          },
          "name": {
            "$ref": "#/components/schemas/PropertyUpdateString"
          },
          "number": {
            "$ref": "#/components/schemas/PropertyUpdateString"
          }
        }
      },
      "AttributeDefinitionResponse": {
        "title": "List of results.",
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "charset": {
            "title": "Charset for attribute definition.",
            "type": "string"
          },
          "contentType": {
            "title": "Content type for attribute definitions.",
            "type": "string"
          },
          "dataType": {
            "title": "Data type for attribute definition.",
            "type": "string",
            "enum": [
              "boolean",
              "integer",
              "decimal",
              "date",
              "time",
              "date_time",
              "location",
              "single_select",
              "multi_select",
              "text",
              "formatted_text",
              "pattern",
              "multiline",
              "column",
              "matrix",
              "dictionary"
            ]
          },
          "description": {
            "title": "Attribute definition description.",
            "type": "string"
          },
          "externalSource": {
            "title": "Derived from external source.",
            "type": "boolean"
          },
          "filterParentDefinitionId": {
            "title": "Filter parent definition id for dictionary values.",
            "type": "string"
          },
          "group": {
            "title": "Name of the group that this definition belongs to.",
            "type": "string"
          },
          "groupId": {
            "title": "Id of group that definition belongs to.",
            "type": "string"
          },
          "id": {
            "title": "An identifier randomly generated by PIM. ID is unique across all attribute definitions.",
            "type": "string"
          },
          "internal": {
            "title": "Flag of internal use only.",
            "type": "boolean"
          },
          "isCompound": {
            "title": "Flag which determine compound attribute.",
            "type": "boolean"
          },
          "name": {
            "title": "Name of the attribute definition.",
            "type": "string"
          },
          "number": {
            "title": "Number of the attribute definition.",
            "type": "string"
          },
          "restrictions": {
            "$ref": "#/components/schemas/RestrictionsDto"
          },
          "selectedValuesLimit": {
            "title": "Limit for selected dictionary values on product.",
            "type": "integer",
            "format": "int32"
          },
          "toBeRemoved": {
            "title": "Flag which determine if attribute is scheduled for removal.",
            "type": "boolean"
          },
          "unit": {
            "title": "Unit for attribute definition.",
            "type": "string"
          }
        }
      },
      "AttributeDefinitionUpdateResponse": {
        "type": "object",
        "properties": {
          "numberOfAlteredCategoriesWithColumnAttributes": {
            "title": "Number of altered categories with column attributes.",
            "type": "integer",
            "format": "int64"
          },
          "numberOfAlteredCategoriesWithMatrixAttributes": {
            "title": "Number of altered categories with matrix attributes.",
            "type": "integer",
            "format": "int64"
          },
          "numberOfAlteredCategoriesWithSelectAttributes": {
            "title": "Number of altered categories with select attributes.",
            "type": "integer",
            "format": "int64"
          },
          "numberOfAlteredProductWithColumnAttributes": {
            "title": "Number of altered product with column attributes.",
            "type": "integer",
            "format": "int64"
          },
          "numberOfAlteredProductWithMatrixAttributes": {
            "title": "Number of altered product with matrix attributes.",
            "type": "integer",
            "format": "int64"
          },
          "numberOfAlteredProductWithSelectAttributes": {
            "title": "Number of altered product with select attributes.",
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "AttributeGroupRequest": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "Name of the attribute group.",
            "type": "string"
          },
          "number": {
            "title": "Number of the attribute group.",
            "type": "string"
          }
        }
      },
      "AttributeGroupResponse": {
        "title": "List of results.",
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "ID of an attribute group.",
            "type": "string"
          },
          "name": {
            "title": "Name of the attribute group.",
            "type": "string"
          },
          "number": {
            "title": "Number of the attribute group.",
            "type": "string"
          },
          "orderByName": {
            "title": "Whether the attribute group is being ordered by name or not.",
            "type": "boolean"
          }
        }
      },
      "AttributeValidationData": {
        "title": "Attribute validation data.",
        "type": "object",
        "properties": {
          "id": {
            "title": "Attribute ID.",
            "type": "string"
          },
          "issues": {
            "title": "Validation issues.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttributeValidationIssue"
            }
          },
          "status": {
            "title": "Validation status.",
            "type": "string",
            "enum": [
              "SUCCESSFUL",
              "FAILED"
            ]
          }
        }
      },
      "AttributeValidationIssue": {
        "title": "Validation issues.",
        "type": "object",
        "properties": {
          "code": {
            "title": "Validation issue code.",
            "type": "string",
            "enum": [
              "DUPLICATED_SELECT_VALUE",
              "NOT_FOUND"
            ]
          },
          "details": {
            "$ref": "#/components/schemas/AttributeValidationIssueDetails"
          },
          "message": {
            "title": "Validation message.",
            "type": "string"
          }
        }
      },
      "AttributeValidationIssueDetails": {
        "title": "Attribute validation issue details.",
        "type": "object",
        "properties": {
          "duplicatedSelectValue": {
            "$ref": "#/components/schemas/DuplicatedSelectValue"
          }
        }
      },
      "AttributeValidationRequest": {
        "type": "object",
        "properties": {
          "definitions": {
            "title": "List of identifiers randomly generated by PIM. ID is unique across all attribute definitions.",
            "maxItems": 100,
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttributeDefinitionIdDto"
            }
          }
        }
      },
      "AttributeValidationResponse": {
        "type": "object",
        "properties": {
          "data": {
            "title": "Attribute validation data.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttributeValidationData"
            }
          }
        }
      },
      "AttributeValueAll": {
        "title": "List of results.",
        "type": "object",
        "properties": {
          "column": {
            "title": "Column attribute values for product.",
            "type": "object",
            "additionalProperties": {
              "title": "Column attribute values for product.",
              "type": "string"
            }
          },
          "definitionId": {
            "title": "Attribute definition ID for given value.",
            "type": "string"
          },
          "dictionary": {
            "title": "Dictionary attribute values for product.",
            "type": "array",
            "items": {
              "title": "Dictionary attribute values for product.",
              "type": "string"
            }
          },
          "matrix": {
            "title": "Matrix attribute values for product.",
            "type": "object",
            "additionalProperties": {
              "title": "Matrix attribute values for product.",
              "type": "object",
              "additionalProperties": {
                "title": "Matrix attribute values for product.",
                "type": "string"
              }
            }
          },
          "values": {
            "title": "Attribute values for product.",
            "type": "array",
            "items": {
              "title": "Attribute values for product.",
              "type": "string"
            }
          }
        }
      },
      "AttributeValueFull": {
        "title": "A value specifying the list of product attributes.",
        "required": [
          "definitionId"
        ],
        "type": "object",
        "properties": {
          "column": {
            "title": "Column attribute values for product.",
            "type": "object",
            "additionalProperties": {
              "title": "Column attribute values for product.",
              "type": "string"
            }
          },
          "copy": {
            "title": "Variant copy flag.",
            "type": "boolean"
          },
          "definingAttributes": {
            "title": "Variant defining attributes flag.",
            "type": "boolean"
          },
          "definitionId": {
            "title": "Attribute definition ID for given value.",
            "type": "string"
          },
          "dictionary": {
            "title": "Dictionary attribute values for product.",
            "type": "array",
            "items": {
              "title": "Dictionary attribute values for product.",
              "type": "string"
            }
          },
          "locked": {
            "title": "Variant lock flag.",
            "type": "boolean"
          },
          "mandatory": {
            "title": "Variant mandatory flag.",
            "type": "boolean"
          },
          "matrix": {
            "title": "Matrix attribute values for product.",
            "type": "object",
            "additionalProperties": {
              "title": "Matrix attribute values for product.",
              "type": "object",
              "additionalProperties": {
                "title": "Matrix attribute values for product.",
                "type": "string"
              }
            }
          },
          "readOnly": {
            "title": "Has attribute value read only access for current user.",
            "type": "boolean"
          },
          "values": {
            "title": "Attribute values for product.",
            "type": "array",
            "items": {
              "title": "Attribute values for product.",
              "type": "string"
            }
          }
        }
      },
      "AttributeValueValues": {
        "type": "object",
        "properties": {
          "values": {
            "title": "Attribute values for product.",
            "type": "array",
            "items": {
              "title": "Attribute values for product.",
              "type": "string"
            }
          }
        }
      },
      "AttributesFilteringViewsDto": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/FilteringViewsDto"
          },
          {
            "type": "object",
            "properties": {
              "definitionIds": {
                "maxItems": 2147483647,
                "minItems": 1,
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        ]
      },
      "BundlesFilteringViewsDto": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/FilteringViewsDto"
          }
        ]
      },
      "CategoriesFilteringViewsDto": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/FilteringViewsDto"
          }
        ]
      },
      "CategoryAttributeBaseMetadataResponse": {
        "title": "List of results.",
        "type": "object",
        "properties": {
          "attributeDefinitionId": {
            "title": "Attribute definition ID.",
            "type": "string"
          },
          "attributeValue": {
            "title": "Attribute value.",
            "type": "string"
          },
          "categoryId": {
            "title": "Category ID.",
            "type": "string"
          },
          "column": {
            "title": "Column attribute values.",
            "type": "object",
            "additionalProperties": {
              "title": "Column attribute values.",
              "type": "string"
            }
          },
          "dictionary": {
            "title": "Dictionary attribute values.",
            "type": "array",
            "items": {
              "title": "Dictionary attribute values.",
              "type": "string"
            }
          },
          "matrix": {
            "title": "Matrix attribute values.",
            "type": "object",
            "additionalProperties": {
              "title": "Matrix attribute values.",
              "type": "object",
              "additionalProperties": {
                "title": "Matrix attribute values.",
                "type": "string"
              }
            }
          }
        }
      },
      "CategoryAttributeDto": {
        "title": "List of Catalog/category's attributes.",
        "required": [
          "definitionId"
        ],
        "type": "object",
        "properties": {
          "column": {
            "title": "Column attribute values for category.",
            "type": "object",
            "additionalProperties": {
              "title": "Column attribute values for category.",
              "type": "string"
            }
          },
          "definitionId": {
            "title": "Attribute definition ID for given value.",
            "type": "string"
          },
          "dictionary": {
            "title": "Dictionary attribute values for category.",
            "uniqueItems": true,
            "type": "array",
            "items": {
              "title": "Dictionary attribute values for category.",
              "type": "string"
            }
          },
          "isCopyAttribute": {
            "title": "Attribute copy flag.",
            "type": "boolean"
          },
          "isLocked": {
            "title": "Lock flag to determine that attribute is locked/unlocked.",
            "type": "boolean"
          },
          "isMandatory": {
            "title": "Attribute mandatory flag.",
            "type": "boolean"
          },
          "matrix": {
            "title": "Matrix attribute values for category.",
            "type": "object",
            "additionalProperties": {
              "title": "Matrix attribute values for category.",
              "type": "object",
              "additionalProperties": {
                "title": "Matrix attribute values for category.",
                "type": "string"
              }
            }
          },
          "select": {
            "title": "Select attribute values for category.",
            "type": "object",
            "additionalProperties": {
              "title": "Select attribute values for category.",
              "type": "array",
              "items": {
                "title": "Select attribute values for category.",
                "type": "string"
              }
            }
          },
          "value": {
            "title": "Attribute value for category.",
            "type": "string"
          }
        }
      },
      "CategoryAttributeMetadataResponse": {
        "title": "List of results.",
        "type": "object",
        "properties": {
          "assignedOn": {
            "title": "Assigned Id.",
            "type": "string"
          },
          "attributeDefinitionId": {
            "title": "Attribute definition ID.",
            "type": "string"
          },
          "attributeDefinitionName": {
            "title": "Attribute definition name.",
            "type": "string"
          },
          "attributeValue": {
            "title": "Attribute value.",
            "type": "string"
          },
          "column": {
            "title": "Column attribute values.",
            "type": "object",
            "additionalProperties": {
              "title": "Column attribute values.",
              "type": "string"
            }
          },
          "copySetOn": {
            "title": "Attribute definition ID that data is copied of.",
            "type": "string"
          },
          "dictionary": {
            "title": "Dictionary attribute values.",
            "type": "array",
            "items": {
              "title": "Dictionary attribute values.",
              "type": "string"
            }
          },
          "lockedSetOn": {
            "title": "Lock ID.",
            "type": "string"
          },
          "mandatorySetOn": {
            "title": "Mandatory category ID.",
            "type": "string"
          },
          "matrix": {
            "title": "Matrix attribute values.",
            "type": "object",
            "additionalProperties": {
              "title": "Matrix attribute values.",
              "type": "object",
              "additionalProperties": {
                "title": "Matrix attribute values.",
                "type": "string"
              }
            }
          },
          "readOnly": {
            "title": "Is attribute read only.",
            "type": "boolean"
          }
        }
      },
      "CategoryAttributeRequest": {
        "type": "object",
        "properties": {
          "value": {
            "title": "Attribute value to create in catalog node.",
            "type": "string"
          }
        }
      },
      "CategoryBasicResponse": {
        "title": "List of results.",
        "type": "object",
        "properties": {
          "assets": {
            "title": "List of catalog/category's assets.",
            "type": "array",
            "items": {
              "title": "List of catalog/category's assets.",
              "type": "string"
            }
          },
          "description": {
            "title": "Catalog/category's description.",
            "type": "string"
          },
          "id": {
            "title": "An identifier randomly generated by PIM. ID is unique across all catalogs/categories.",
            "type": "string"
          },
          "name": {
            "title": "Catalog/category's name.",
            "type": "string"
          },
          "number": {
            "title": "Catalog/category's number.",
            "type": "string"
          },
          "parentId": {
            "title": "Category's parent identifier.",
            "type": "string"
          },
          "readOnly": {
            "title": "Has catalog/category read only access for current user.",
            "type": "boolean"
          }
        }
      },
      "CategoryColumnAttributeRequest": {
        "type": "object",
        "properties": {
          "column": {
            "title": "Column attribute values for product.",
            "type": "object",
            "additionalProperties": {
              "title": "Column attribute values for product.",
              "type": "string"
            }
          }
        }
      },
      "CategoryConnectionResponse": {
        "title": "List of results.",
        "type": "object",
        "properties": {
          "leftProduct": {
            "$ref": "#/components/schemas/ProductConnectionMetadata"
          },
          "relation": {
            "$ref": "#/components/schemas/RelationResponse"
          },
          "rightCategory": {
            "$ref": "#/components/schemas/CategoryBasicResponse"
          }
        }
      },
      "CategoryFilter": {
        "title": "Filters by which categories are searched.",
        "type": "object",
        "properties": {
          "type": {
            "title": "Define filter type.",
            "type": "string",
            "enum": [
              "NUMBER_IN",
              "ID_IN"
            ]
          },
          "values": {
            "title": "Define the list of filter values.",
            "type": "array",
            "items": {
              "title": "Define the list of filter values.",
              "type": "string"
            }
          }
        }
      },
      "CategoryFilteringRequest": {
        "type": "object",
        "properties": {
          "filters": {
            "title": "Filters by which categories are searched.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CategoryFilter"
            }
          },
          "page": {
            "title": "A number sequence representing a block of items to return as a result set.",
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "title": "Size of a block of items to return. It corresponds with the page parameter.",
            "maximum": 1000,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "CategoryFullResponse": {
        "title": "List of results.",
        "type": "object",
        "properties": {
          "assets": {
            "title": "List of catalog/category's assets.",
            "type": "array",
            "items": {
              "title": "List of catalog/category's assets.",
              "type": "string"
            }
          },
          "attributes": {
            "title": "List of Catalog/category's attributes.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CategoryAttributeDto"
            }
          },
          "description": {
            "title": "Catalog/category's description.",
            "type": "string"
          },
          "id": {
            "title": "An identifier randomly generated by PIM. ID is unique across all catalogs/categories.",
            "type": "string"
          },
          "name": {
            "title": "Catalog/category's name.",
            "type": "string"
          },
          "number": {
            "title": "Catalog/category's number.",
            "type": "string"
          },
          "parentId": {
            "title": "Category's parent identifier.",
            "type": "string"
          },
          "path": {
            "title": "Catalog/category's path.",
            "type": "string"
          },
          "pathIds": {
            "title": "List of Catalog/category's paths identifiers.",
            "type": "array",
            "items": {
              "title": "List of Catalog/category's paths identifiers.",
              "type": "string"
            }
          },
          "readOnly": {
            "title": "Has catalog/category read only access for current user.",
            "type": "boolean"
          },
          "state": {
            "title": "Catalog/category's state.",
            "type": "string",
            "enum": [
              "ACTIVE",
              "ARCHIVED"
            ]
          }
        }
      },
      "CategoryMatrixAttributeRequest": {
        "type": "object",
        "properties": {
          "matrix": {
            "title": "Matrix attribute values for product.",
            "type": "object",
            "additionalProperties": {
              "title": "Matrix attribute values for product.",
              "type": "object",
              "additionalProperties": {
                "title": "Matrix attribute values for product.",
                "type": "string"
              }
            }
          }
        }
      },
      "CategoryProductRequest": {
        "type": "object",
        "properties": {
          "productId": {
            "title": "Product id.",
            "type": "string"
          }
        }
      },
      "CategoryProductResponse": {
        "title": "List of results.",
        "type": "object",
        "properties": {
          "productId": {
            "title": "Product's id.",
            "type": "string"
          },
          "productName": {
            "title": "Product's name.",
            "type": "string"
          }
        }
      },
      "CategoryReferenceRequest": {
        "required": [
          "categoryIds"
        ],
        "type": "object",
        "properties": {
          "categoryIds": {
            "uniqueItems": true,
            "type": "array",
            "description": "A set of category ids.",
            "items": {
              "type": "string",
              "description": "A set of category ids."
            }
          }
        }
      },
      "CategoryWithChildrenResponse": {
        "type": "object",
        "properties": {
          "assets": {
            "title": "List of catalog/category's assets.",
            "type": "array",
            "items": {
              "title": "List of catalog/category's assets.",
              "type": "string"
            }
          },
          "children": {
            "title": "Catalog/category's children.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CategoryWithChildrenResponse"
            }
          },
          "description": {
            "title": "Catalog/category's description.",
            "type": "string"
          },
          "id": {
            "title": "An identifier randomly generated by PIM. ID is unique across all catalogs/categories.",
            "type": "string"
          },
          "name": {
            "title": "Catalog/category's name.",
            "type": "string"
          },
          "number": {
            "title": "Catalog/category's number.",
            "type": "string"
          },
          "readOnly": {
            "title": "Has catalog/category read only access for current user.",
            "type": "boolean"
          }
        }
      },
      "ColumnAttributeDefinitionDto": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "externalSource": {
            "title": "Derived from external source.",
            "type": "boolean"
          },
          "groupId": {
            "title": "Id of group that definition belongs to.",
            "type": "string"
          },
          "internal": {
            "title": "Flag of internal use only.",
            "type": "boolean"
          },
          "name": {
            "title": "Name of the attribute definition.",
            "type": "string"
          },
          "number": {
            "title": "Number of the attribute definition.",
            "type": "string"
          },
          "restrictions": {
            "$ref": "#/components/schemas/ColumnRestrictionDto"
          }
        }
      },
      "ColumnAttributeValueAddRequest": {
        "type": "object",
        "properties": {
          "column": {
            "title": "Attribute values for product.",
            "type": "object",
            "additionalProperties": {
              "title": "Attribute values for product.",
              "type": "string"
            }
          },
          "definitionId": {
            "title": "Attribute definition ID for given value.",
            "type": "string"
          }
        }
      },
      "ColumnAttributeValueDto": {
        "type": "object",
        "properties": {
          "column": {
            "title": "Attribute values for product.",
            "type": "object",
            "additionalProperties": {
              "title": "Attribute values for product.",
              "type": "string"
            }
          }
        }
      },
      "ColumnRestrictionDto": {
        "title": "restrictions related to column data type",
        "type": "object",
        "properties": {
          "column": {
            "$ref": "#/components/schemas/ColumnRestrictionsDto"
          }
        }
      },
      "ColumnRestrictionsDto": {
        "title": "Allows to specify possible values for column types.",
        "type": "object",
        "properties": {
          "columns": {
            "title": "Column row values.",
            "maxItems": 2147483647,
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdentifiableValueDto"
            }
          }
        }
      },
      "CompoundAttributeDefinitionRequest": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "externalSource": {
            "title": "Derived from external source.",
            "type": "boolean"
          },
          "format": {
            "title": "List of string format.",
            "type": "array",
            "items": {
              "title": "List of string format.",
              "type": "string"
            }
          },
          "groupId": {
            "title": "Id of group that definition belongs to.",
            "type": "string"
          },
          "internal": {
            "title": "Flag of internal use only.",
            "type": "boolean"
          },
          "name": {
            "title": "Name of the attribute definition.",
            "type": "string"
          },
          "number": {
            "title": "Number of the attribute definition.",
            "type": "string"
          },
          "subDefinitions": {
            "title": "Ordered list of sub attribute definitions in format: id, isCompound.",
            "maxItems": 64,
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CompoundAttributeSubDefinitionDto"
            }
          }
        }
      },
      "CompoundAttributeDefinitionResponse": {
        "title": "List of results.",
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "description": {
            "title": "Compound attribute definition description.",
            "type": "string"
          },
          "externalSource": {
            "title": "Derived from external source.",
            "type": "boolean"
          },
          "format": {
            "title": "List of string format.",
            "type": "array",
            "items": {
              "title": "List of string format.",
              "type": "string"
            }
          },
          "groupId": {
            "title": "Id of group that definition belongs to.",
            "type": "string"
          },
          "id": {
            "title": "An identifier randomly generated by PIM. ID is unique across all compound attribute definitions.",
            "type": "string"
          },
          "internal": {
            "title": "Flag of internal use only.",
            "type": "boolean"
          },
          "name": {
            "title": "Name of the attribute definition.",
            "type": "string"
          },
          "number": {
            "title": "Number of the attribute definition.",
            "type": "string"
          },
          "subDefinitions": {
            "title": "Ordered list of sub attribute definitions in format: id, isCompound.",
            "maxItems": 64,
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CompoundAttributeSubDefinitionDto"
            }
          },
          "toBeRemoved": {
            "title": "Flag which determine if attribute is scheduled for removal.",
            "type": "boolean"
          }
        }
      },
      "CompoundAttributeSubDefinitionDto": {
        "title": "Ordered list of sub attribute definitions in format: id, isCompound.",
        "type": "object",
        "properties": {
          "compound": {
            "title": "Flag defines if attribute is compound.",
            "type": "boolean"
          },
          "id": {
            "title": "An identifier randomly generated by PIM. ID is unique across all compound sub definitions.",
            "type": "string"
          }
        }
      },
      "ConnectionDto": {
        "title": "Related categories.",
        "type": "object",
        "properties": {
          "quantity": {
            "title": "Quantity value for relation.",
            "type": "number"
          },
          "relatedId": {
            "title": "Related object id.",
            "type": "string"
          },
          "relationId": {
            "title": "An identifier randomly generated by PIM. ID is unique across all relations.",
            "type": "string"
          },
          "reverse": {
            "title": "Is relation in reverse to related object.",
            "type": "boolean"
          }
        }
      },
      "CopyProductRequest": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id of product to copy.",
            "type": "string"
          },
          "name": {
            "title": "New product name.",
            "type": "string"
          },
          "number": {
            "title": "New product number.",
            "type": "string"
          }
        }
      },
      "CountableLong": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "CreateCategoryRequest": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "Name of catalog/category node.",
            "maxLength": 1000,
            "minLength": 1,
            "type": "string"
          },
          "number": {
            "title": "Number of catalog/category node.",
            "maxLength": 1000,
            "minLength": 0,
            "type": "string"
          },
          "parentId": {
            "title": "Parent id of category node.",
            "type": "string"
          }
        }
      },
      "CreateSimpleAttributeRequest": {
        "type": "object",
        "properties": {
          "definitionId": {
            "title": "Attribute definition ID for given value.",
            "type": "string"
          },
          "values": {
            "title": "Attribute values for product.",
            "type": "array",
            "items": {
              "title": "Attribute values for product.",
              "type": "string"
            }
          }
        }
      },
      "CursorFilteringRequestDto": {
        "type": "object",
        "properties": {
          "assetFilters": {
            "title": "Allows filtering by assets.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GridAssetFilterDto"
            }
          },
          "attributeFilters": {
            "title": "Allows filtering by attributes.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GridAttributeFilterDto"
            }
          },
          "baseFilters": {
            "title": "Allows filtering by base data eg. type.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GridProductBaseFilterDto"
            }
          },
          "categoryFilters": {
            "title": "Allows filtering by categories.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GridCategoryFilterDto"
            }
          },
          "count": {
            "title": "The number of products returned.",
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "cursor": {
            "title": "The unique string of the cursor.",
            "type": "string"
          },
          "labelFilters": {
            "title": "Allows filtering by labels.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GridLabelFilterDto"
            }
          },
          "productCreateDateFilter": {
            "title": "Allows filtering by create date.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GridProductCreateDateFilterDto"
            }
          },
          "productLastUpdateFilter": {
            "title": "Allows filtering by last update date.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GridProductLastUpdateFilterDto"
            }
          },
          "publishStateFilter": {
            "$ref": "#/components/schemas/GridPublishStateFilterDto"
          },
          "relationsFilter": {
            "$ref": "#/components/schemas/GridRelationsFilterDto"
          },
          "scoreFilter": {
            "$ref": "#/components/schemas/GridScoreFilterDto"
          },
          "scoreRequirementResultFilters": {
            "title": "Allows filtering by score requirement results.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GridScoreRequirementResultFilterDto"
            }
          },
          "typeFilter": {
            "$ref": "#/components/schemas/GridProductTypeFilterDto"
          }
        }
      },
      "CursorFilteringWithViewsRequestDto": {
        "type": "object",
        "properties": {
          "assetFilters": {
            "title": "Allows filtering by assets.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GridAssetFilterDto"
            }
          },
          "attributeFilters": {
            "title": "Allows filtering by attributes.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GridAttributeFilterDto"
            }
          },
          "baseFilters": {
            "title": "Allows filtering by base data eg. type.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GridProductBaseFilterDto"
            }
          },
          "categoryFilters": {
            "title": "Allows filtering by categories.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GridCategoryFilterDto"
            }
          },
          "count": {
            "title": "The number of products returned.",
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "cursor": {
            "title": "The unique string of the cursor.",
            "type": "string"
          },
          "labelFilters": {
            "title": "Allows filtering by labels.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GridLabelFilterDto"
            }
          },
          "productCreateDateFilter": {
            "title": "Allows filtering by create date.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GridProductCreateDateFilterDto"
            }
          },
          "productLastUpdateFilter": {
            "title": "Allows filtering by last update date.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GridProductLastUpdateFilterDto"
            }
          },
          "publishStateFilter": {
            "$ref": "#/components/schemas/GridPublishStateFilterDto"
          },
          "relationsFilter": {
            "$ref": "#/components/schemas/GridRelationsFilterDto"
          },
          "scoreFilter": {
            "$ref": "#/components/schemas/GridScoreFilterDto"
          },
          "scoreRequirementResultFilters": {
            "title": "Allows filtering by score requirement results.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GridScoreRequirementResultFilterDto"
            }
          },
          "typeFilter": {
            "$ref": "#/components/schemas/GridProductTypeFilterDto"
          },
          "views": {
            "title": "List of entities views.",
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/AssetsFilteringViewsDto"
                },
                {
                  "$ref": "#/components/schemas/AttributesFilteringViewsDto"
                },
                {
                  "$ref": "#/components/schemas/BundlesFilteringViewsDto"
                },
                {
                  "$ref": "#/components/schemas/CategoriesFilteringViewsDto"
                },
                {
                  "$ref": "#/components/schemas/LabelsFilteringViewsDto"
                },
                {
                  "$ref": "#/components/schemas/MetadataFilteringViewsDto"
                },
                {
                  "$ref": "#/components/schemas/RelatedCategoriesFilteringViewsDto"
                },
                {
                  "$ref": "#/components/schemas/RelatedProductsFilteringViewsDto"
                },
                {
                  "$ref": "#/components/schemas/VariantsFilteringViewsDto"
                }
              ]
            }
          }
        }
      },
      "CursorWithViewsRequestDto": {
        "type": "object",
        "properties": {
          "count": {
            "title": "The number of products returned.",
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "cursor": {
            "title": "The unique string of the cursor.",
            "type": "string"
          },
          "views": {
            "title": "List of entities views.",
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/AssetsFilteringViewsDto"
                },
                {
                  "$ref": "#/components/schemas/AttributesFilteringViewsDto"
                },
                {
                  "$ref": "#/components/schemas/BundlesFilteringViewsDto"
                },
                {
                  "$ref": "#/components/schemas/CategoriesFilteringViewsDto"
                },
                {
                  "$ref": "#/components/schemas/LabelsFilteringViewsDto"
                },
                {
                  "$ref": "#/components/schemas/MetadataFilteringViewsDto"
                },
                {
                  "$ref": "#/components/schemas/RelatedCategoriesFilteringViewsDto"
                },
                {
                  "$ref": "#/components/schemas/RelatedProductsFilteringViewsDto"
                },
                {
                  "$ref": "#/components/schemas/VariantsFilteringViewsDto"
                }
              ]
            }
          }
        }
      },
      "DeleteProductsAttributesBulkRequest": {
        "required": [
          "productIds"
        ],
        "type": "object",
        "properties": {
          "attributeDefinitionId": {
            "type": "string"
          },
          "productIds": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "DeleteResult": {
        "type": "object",
        "properties": {
          "deleteCount": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        }
      },
      "DictionaryAttributeCreateRequest": {
        "required": [
          "value"
        ],
        "type": "object",
        "properties": {
          "number": {
            "title": "New dictionary number.",
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "value": {
            "title": "New dictionary value.",
            "type": "string"
          }
        }
      },
      "DictionaryAttributeDefinitionDto": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "externalSource": {
            "title": "Derived from external source.",
            "type": "boolean"
          },
          "groupId": {
            "title": "Id of group that definition belongs to.",
            "type": "string"
          },
          "internal": {
            "title": "Flag of internal use only.",
            "type": "boolean"
          },
          "name": {
            "title": "Name of the attribute definition.",
            "type": "string"
          },
          "number": {
            "title": "Number of the attribute definition.",
            "type": "string"
          }
        }
      },
      "DictionaryAttributeDefinitionUpdate": {
        "type": "object",
        "properties": {
          "selectedValuesLimit": {
            "$ref": "#/components/schemas/PropertyUpdateInteger"
          }
        }
      },
      "DictionaryAttributeFilterDto": {
        "title": "List of dictionary attribute filters.",
        "type": "object",
        "properties": {
          "type": {
            "title": "Type of dictionary attribute filter.",
            "type": "string",
            "enum": [
              "ID_IN",
              "NUMBER_IN"
            ]
          },
          "values": {
            "title": "Values of dictionary attribute related to filter type.",
            "maxItems": 2147483647,
            "minItems": 1,
            "type": "array",
            "items": {
              "title": "Values of dictionary attribute related to filter type.",
              "type": "string"
            }
          }
        }
      },
      "DictionaryAttributeFilteringRequestDto": {
        "type": "object",
        "properties": {
          "filters": {
            "title": "List of dictionary attribute filters.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DictionaryAttributeFilterDto"
            }
          },
          "page": {
            "title": "A number sequence representing a block of items to return as a result set.",
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "title": "Size of a block of items to return. It corresponds with the page parameter.",
            "maximum": 1000,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "DictionaryAttributeResponse": {
        "title": "List of results.",
        "type": "object",
        "properties": {
          "createdDate": {
            "title": "Timestamp of attribute creation.",
            "type": "integer",
            "format": "int64"
          },
          "definitionId": {
            "title": "Definition id of dictionary definition.",
            "type": "string"
          },
          "id": {
            "title": "An identifier randomly generated by PIM. ID is unique across all attribute definitions.",
            "type": "string"
          },
          "lastUpdate": {
            "title": "Timestamp of last attribute update.",
            "type": "integer",
            "format": "int64"
          },
          "number": {
            "title": "Number of dictionary definition.",
            "type": "string"
          },
          "value": {
            "$ref": "#/components/schemas/MultiLanguageDto"
          }
        }
      },
      "DictionaryAttributeUpdateRequest": {
        "type": "object",
        "properties": {
          "number": {
            "$ref": "#/components/schemas/PropertyUpdateString"
          },
          "value": {
            "$ref": "#/components/schemas/PropertyUpdateString"
          }
        }
      },
      "DictionaryAttributeValueAddRequest": {
        "type": "object",
        "properties": {
          "definitionId": {
            "title": "An identifier randomly generated by PIM. ID is unique across all attribute definitions.",
            "type": "string"
          }
        }
      },
      "DictionaryValueFilterDto": {
        "title": "List of dictionary value filters.",
        "type": "object",
        "properties": {
          "type": {
            "title": "Dictionary value filter type.",
            "type": "string",
            "enum": [
              "PARENT_VALUE_ID_IN",
              "CHILD_VALUE_ID_IN"
            ]
          },
          "valueIds": {
            "title": "Value of entity id.",
            "maxItems": 100,
            "minItems": 1,
            "type": "array",
            "items": {
              "title": "Value of entity id.",
              "type": "string"
            }
          }
        }
      },
      "DictionaryValueFilterResponse": {
        "title": "List of results.",
        "type": "object",
        "properties": {
          "childValueId": {
            "title": "ID of child value.",
            "type": "string"
          },
          "parentValueId": {
            "title": "ID of parent value.",
            "type": "string"
          }
        }
      },
      "DictionaryValueFilteringRequest": {
        "type": "object",
        "properties": {
          "filters": {
            "title": "List of dictionary value filters.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DictionaryValueFilterDto"
            }
          },
          "page": {
            "title": "A number sequence representing a block of items to return as a result set.",
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "title": "Size of a block of items to return. It corresponds with the page parameter.",
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "DuplicatedSelectValue": {
        "title": "Duplicated select value.",
        "type": "object",
        "properties": {
          "values": {
            "title": "Duplicated select values.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SelectValueIdDto"
            }
          }
        }
      },
      "ErrorDetails": {
        "type": "object",
        "properties": {
          "field": {
            "title": "Error related field.",
            "type": "string"
          },
          "message": {
            "title": "Error message.",
            "type": "string"
          },
          "rejectedValue": {
            "title": "Invalid value causing error.",
            "type": "string"
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "error": {
            "title": "General error description.",
            "type": "string"
          },
          "errorDetails": {
            "title": "List of errors details.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ErrorDetails"
            }
          },
          "requestId": {
            "title": "Request ID used for logging.",
            "type": "string"
          },
          "status": {
            "title": "Error status code.",
            "type": "integer",
            "format": "int32"
          },
          "timestamp": {
            "title": "Error timestamp.",
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "FilteringViewsDto": {
        "title": "List of entities views.",
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          }
        },
        "description": "<p>Views mapping</p><table><tr><th>View type</th><th>View dto</th></tr><tr><td>ASSETS</td><td>AssetsFilteringViewsDto</td></tr><tr><td>ATTRIBUTES</td><td>AttributesFilteringViewsDto</td></tr><tr><td>METADATA</td><td>MetadataFilteringViewsDto</td></tr><tr><td>CATEGORIES</td><td>CategoriesFilteringViewsDto</td></tr><tr><td>BUNDLES</td><td>BundlesFilteringViewsDto</td></tr><tr><td>LABELS</td><td>LabelsFilteringViewsDto</td></tr><tr><td>VARIANTS</td><td>VariantsFilteringViewsDto</td></tr><tr><td>RELATED_PRODUCTS</td><td>RelatedProductsFilteringViewsDto</td></tr><tr><td>RELATED_CATEGORIES</td><td>RelatedCategoriesFilteringViewsDto</td></tr></table>",
        "discriminator": {
          "propertyName": "type"
        },
        "oneOf": [
          {
            "$ref": "#/components/schemas/AssetsFilteringViewsDto"
          },
          {
            "$ref": "#/components/schemas/AttributesFilteringViewsDto"
          },
          {
            "$ref": "#/components/schemas/MetadataFilteringViewsDto"
          },
          {
            "$ref": "#/components/schemas/CategoriesFilteringViewsDto"
          },
          {
            "$ref": "#/components/schemas/BundlesFilteringViewsDto"
          },
          {
            "$ref": "#/components/schemas/LabelsFilteringViewsDto"
          },
          {
            "$ref": "#/components/schemas/VariantsFilteringViewsDto"
          },
          {
            "$ref": "#/components/schemas/RelatedProductsFilteringViewsDto"
          },
          {
            "$ref": "#/components/schemas/RelatedCategoriesFilteringViewsDto"
          }
        ]
      },
      "GridAssetFilterDto": {
        "title": "Allows filtering by assets.",
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "assetCount": {
            "type": "integer",
            "format": "int32"
          },
          "assetIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "labelsIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "type": {
            "type": "string",
            "enum": [
              "HAVE_NONE",
              "HAVE_ANY",
              "HAVE_MORE_THAN",
              "HAVE_LESS_THAN",
              "ASSIGNED_TO_ANY",
              "ASSIGNED_TO_ALL",
              "NOT_HAVE_LABEL",
              "HAVE_LABEL"
            ]
          }
        }
      },
      "GridAttributeFilterDto": {
        "title": "Allows filtering by attributes.",
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "attributeDefinitionId": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "CONTAINS",
              "NOT_CONTAINS",
              "EQUALS",
              "NOT_EQUALS",
              "EMPTY",
              "NOT_EMPTY",
              "DOES_HAVE_SOME",
              "DOESNT_HAVE_ANY",
              "DOES_HAVE_ALL",
              "DOESNT_HAVE_ALL",
              "ASSOCIATED",
              "NOT_ASSOCIATED"
            ]
          },
          "values": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "GridCategoryFilterDto": {
        "title": "Allows filtering by categories.",
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "categoryId": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "IN_ANY_CHILD",
              "IN_CATEGORY",
              "WITHOUT_CATEGORY"
            ]
          }
        }
      },
      "GridFilteringBaseRequestDto": {
        "type": "object",
        "properties": {
          "assetFilters": {
            "title": "Allows filtering by assets.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GridAssetFilterDto"
            }
          },
          "attributeFilters": {
            "title": "Allows filtering by attributes.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GridAttributeFilterDto"
            }
          },
          "baseFilters": {
            "title": "Allows filtering by base data eg. type.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GridProductBaseFilterDto"
            }
          },
          "categoryFilters": {
            "title": "Allows filtering by categories.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GridCategoryFilterDto"
            }
          },
          "labelFilters": {
            "title": "Allows filtering by labels.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GridLabelFilterDto"
            }
          },
          "productCreateDateFilter": {
            "title": "Allows filtering by create date.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GridProductCreateDateFilterDto"
            }
          },
          "productLastUpdateFilter": {
            "title": "Allows filtering by last update date.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GridProductLastUpdateFilterDto"
            }
          },
          "publishStateFilter": {
            "$ref": "#/components/schemas/GridPublishStateFilterDto"
          },
          "relationsFilter": {
            "$ref": "#/components/schemas/GridRelationsFilterDto"
          },
          "scoreFilter": {
            "$ref": "#/components/schemas/GridScoreFilterDto"
          },
          "scoreRequirementResultFilters": {
            "title": "Allows filtering by score requirement results.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GridScoreRequirementResultFilterDto"
            }
          },
          "typeFilter": {
            "$ref": "#/components/schemas/GridProductTypeFilterDto"
          }
        }
      },
      "GridFilteringRequestDto": {
        "type": "object",
        "properties": {
          "assetFilters": {
            "title": "Allows filtering by assets.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GridAssetFilterDto"
            }
          },
          "attributeFilters": {
            "title": "Allows filtering by attributes.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GridAttributeFilterDto"
            }
          },
          "attributeIdToSortBy": {
            "title": "Allows to sort by attribute definition ID.",
            "type": "string"
          },
          "baseFilters": {
            "title": "Allows filtering by base data eg. type.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GridProductBaseFilterDto"
            }
          },
          "categoryFilters": {
            "title": "Allows filtering by categories.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GridCategoryFilterDto"
            }
          },
          "column": {
            "title": "The type by which the data will be sorted.",
            "type": "string",
            "enum": [
              "PRODUCT_NAME",
              "PRODUCT_NUMBER",
              "PRODUCT_TYPE",
              "ATTRIBUTE",
              "LAST_UPDATE",
              "NATURAL",
              "CREATE_DATE"
            ]
          },
          "labelFilters": {
            "title": "Allows filtering by labels.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GridLabelFilterDto"
            }
          },
          "page": {
            "title": "A number sequence representing a block of items to return as a result set.",
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "title": "Size of a block of items to return. It corresponds with the page parameter.",
            "maximum": 1000,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "productCreateDateFilter": {
            "title": "Allows filtering by create date.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GridProductCreateDateFilterDto"
            }
          },
          "productLastUpdateFilter": {
            "title": "Allows filtering by last update date.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GridProductLastUpdateFilterDto"
            }
          },
          "publishStateFilter": {
            "$ref": "#/components/schemas/GridPublishStateFilterDto"
          },
          "relationsFilter": {
            "$ref": "#/components/schemas/GridRelationsFilterDto"
          },
          "scoreFilter": {
            "$ref": "#/components/schemas/GridScoreFilterDto"
          },
          "scoreRequirementResultFilters": {
            "title": "Allows filtering by score requirement results.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GridScoreRequirementResultFilterDto"
            }
          },
          "sortDirection": {
            "title": "Sorting direction.",
            "type": "string",
            "enum": [
              "ASC",
              "DESC"
            ]
          },
          "typeFilter": {
            "$ref": "#/components/schemas/GridProductTypeFilterDto"
          }
        }
      },
      "GridLabelFilterDto": {
        "title": "Allows filtering by labels.",
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "labelsIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "type": {
            "type": "string",
            "enum": [
              "ALL",
              "SOME",
              "NOT",
              "EMPTY"
            ]
          }
        }
      },
      "GridProductBaseFilterDto": {
        "title": "Allows filtering by base data eg. type.",
        "required": [
          "type",
          "values"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "NAME_IS",
              "NUMBER_IS",
              "DESCRIPTION_IS",
              "NAME_CONTAINS",
              "NUMBER_CONTAINS",
              "DESCRIPTION_CONTAINS",
              "NAME_NOT_CONTAINS",
              "NUMBER_NOT_CONTAINS",
              "DESCRIPTION_NOT_CONTAINS",
              "NAME_STARTS_WITH",
              "NUMBER_STARTS_WITH",
              "DESCRIPTION_STARTS_WITH",
              "NAME_ENDS_WITH",
              "NUMBER_ENDS_WITH",
              "DESCRIPTION_ENDS_WITH",
              "NUMBER_IN",
              "ID_IN"
            ]
          },
          "values": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "GridProductCreateDateFilterDto": {
        "title": "Allows filtering by create date.",
        "required": [
          "dateMilis",
          "type"
        ],
        "type": "object",
        "properties": {
          "dateMilis": {
            "minimum": 0,
            "type": "integer",
            "format": "int64"
          },
          "type": {
            "type": "string",
            "enum": [
              "GREATER_EQUAL",
              "LESS_EQUAL"
            ]
          }
        }
      },
      "GridProductLastUpdateFilterDto": {
        "title": "Allows filtering by last update date.",
        "required": [
          "dateMilis",
          "type"
        ],
        "type": "object",
        "properties": {
          "dateMilis": {
            "minimum": 0,
            "type": "integer",
            "format": "int64"
          },
          "type": {
            "type": "string",
            "enum": [
              "GREATER_EQUAL",
              "LESS_EQUAL"
            ]
          }
        }
      },
      "GridProductTypeFilterDto": {
        "title": "Allows filtering by type.",
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "groupIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "type": {
            "type": "string",
            "enum": [
              "BUNDLE",
              "GROUP",
              "VARIANT",
              "SINGLE"
            ]
          }
        }
      },
      "GridPublishStateFilterDto": {
        "title": "Allows filtering by publish state.",
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "publishStates": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "type": {
            "type": "string",
            "enum": [
              "IN"
            ]
          }
        }
      },
      "GridRelationsFilterDto": {
        "title": "Allows filtering by relations.",
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "relationId": {
            "type": "string"
          },
          "reverse": {
            "type": "boolean"
          },
          "type": {
            "type": "string",
            "enum": [
              "EMPTY",
              "HAVE",
              "NOT"
            ]
          }
        }
      },
      "GridScoreFilterDto": {
        "title": "Allows filtering by scores.",
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "scores": {
            "type": "array",
            "items": {
              "type": "number"
            }
          },
          "type": {
            "type": "string",
            "enum": [
              "BETWEEN"
            ]
          }
        }
      },
      "GridScoreRequirementResultFilterDto": {
        "title": "Allows filtering by score requirement results.",
        "required": [
          "requirementIds",
          "type"
        ],
        "type": "object",
        "properties": {
          "requirementIds": {
            "maxItems": 1,
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "type": {
            "type": "string",
            "enum": [
              "NOT_MEET_ALL"
            ]
          }
        }
      },
      "GroupedAttributeValuesDto": {
        "title": "List of results.",
        "type": "object",
        "properties": {
          "attributes": {
            "title": "A value specifying the list of product attributes.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttributeValueFull"
            }
          },
          "groupId": {
            "title": "Id of group that given definition belongs to.",
            "type": "string"
          }
        }
      },
      "GroupedCategoryConnectionResponse": {
        "title": "List of results.",
        "type": "object",
        "properties": {
          "categories": {
            "title": "List of category responses.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CategoryBasicResponse"
            }
          },
          "relation": {
            "$ref": "#/components/schemas/RelationResponse"
          }
        }
      },
      "GroupedProductConnectionResponse": {
        "title": "List of results.",
        "type": "object",
        "properties": {
          "products": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductConnectionMetadata"
            }
          },
          "relation": {
            "$ref": "#/components/schemas/RelationResponse"
          },
          "reversedProducts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductConnectionMetadata"
            }
          }
        }
      },
      "IdentifiableValueDto": {
        "title": "Matrix column values.",
        "type": "object",
        "properties": {
          "id": {
            "title": "An identifier randomly generated by PIM. ID is unique across all columns.",
            "type": "string"
          },
          "value": {
            "title": "Column value.",
            "type": "string"
          }
        }
      },
      "JobStatusResponse": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "format": "int64"
          },
          "errorMessage": {
            "type": "string"
          },
          "status": {
            "type": "string"
          }
        }
      },
      "LabelReferenceRequest": {
        "type": "object",
        "properties": {
          "labelIds": {
            "title": "List of label ids.",
            "maxItems": 2147483647,
            "minItems": 1,
            "type": "array",
            "items": {
              "title": "List of label ids.",
              "type": "string"
            }
          }
        }
      },
      "LabelsFilteringViewsDto": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/FilteringViewsDto"
          }
        ]
      },
      "ListFilteringWithViewsRequestDto": {
        "type": "object",
        "properties": {
          "assetFilters": {
            "title": "Allows filtering by assets.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GridAssetFilterDto"
            }
          },
          "attributeFilters": {
            "title": "Allows filtering by attributes.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GridAttributeFilterDto"
            }
          },
          "attributeIdToSortBy": {
            "title": "Allows to sort by attribute definition ID.",
            "type": "string"
          },
          "baseFilters": {
            "title": "Allows filtering by base data eg. type.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GridProductBaseFilterDto"
            }
          },
          "categoryFilters": {
            "title": "Allows filtering by categories.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GridCategoryFilterDto"
            }
          },
          "column": {
            "title": "The type by which the data will be sorted.",
            "type": "string",
            "enum": [
              "PRODUCT_NAME",
              "PRODUCT_NUMBER",
              "PRODUCT_TYPE",
              "ATTRIBUTE",
              "LAST_UPDATE",
              "NATURAL",
              "CREATE_DATE"
            ]
          },
          "labelFilters": {
            "title": "Allows filtering by labels.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GridLabelFilterDto"
            }
          },
          "page": {
            "title": "A number sequence representing a block of items to return as a result set.",
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "title": "Size of a block of items to return. It corresponds with the page parameter.",
            "maximum": 1000,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "productCreateDateFilter": {
            "title": "Allows filtering by create date.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GridProductCreateDateFilterDto"
            }
          },
          "productLastUpdateFilter": {
            "title": "Allows filtering by last update date.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GridProductLastUpdateFilterDto"
            }
          },
          "publishStateFilter": {
            "$ref": "#/components/schemas/GridPublishStateFilterDto"
          },
          "relationsFilter": {
            "$ref": "#/components/schemas/GridRelationsFilterDto"
          },
          "scoreFilter": {
            "$ref": "#/components/schemas/GridScoreFilterDto"
          },
          "scoreRequirementResultFilters": {
            "title": "Allows filtering by score requirement results.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GridScoreRequirementResultFilterDto"
            }
          },
          "sortDirection": {
            "title": "Sorting direction.",
            "type": "string",
            "enum": [
              "ASC",
              "DESC"
            ]
          },
          "typeFilter": {
            "$ref": "#/components/schemas/GridProductTypeFilterDto"
          },
          "views": {
            "title": "List of entities views.",
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/AssetsFilteringViewsDto"
                },
                {
                  "$ref": "#/components/schemas/AttributesFilteringViewsDto"
                },
                {
                  "$ref": "#/components/schemas/BundlesFilteringViewsDto"
                },
                {
                  "$ref": "#/components/schemas/CategoriesFilteringViewsDto"
                },
                {
                  "$ref": "#/components/schemas/LabelsFilteringViewsDto"
                },
                {
                  "$ref": "#/components/schemas/MetadataFilteringViewsDto"
                },
                {
                  "$ref": "#/components/schemas/RelatedCategoriesFilteringViewsDto"
                },
                {
                  "$ref": "#/components/schemas/RelatedProductsFilteringViewsDto"
                },
                {
                  "$ref": "#/components/schemas/VariantsFilteringViewsDto"
                }
              ]
            }
          }
        }
      },
      "ListableAttributeDefinitionResponse": {
        "type": "object",
        "properties": {
          "data": {
            "title": "List of results.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttributeDefinitionResponse"
            }
          }
        }
      },
      "ListableAttributeGroupResponse": {
        "type": "object",
        "properties": {
          "data": {
            "title": "List of results.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttributeGroupResponse"
            }
          }
        }
      },
      "ListableAttributeValueAll": {
        "type": "object",
        "properties": {
          "data": {
            "title": "List of results.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttributeValueAll"
            }
          }
        }
      },
      "ListableCategoryAttributeBaseMetadataResponse": {
        "type": "object",
        "properties": {
          "data": {
            "title": "List of results.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CategoryAttributeBaseMetadataResponse"
            }
          }
        }
      },
      "ListableCategoryAttributeMetadataResponse": {
        "type": "object",
        "properties": {
          "data": {
            "title": "List of results.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CategoryAttributeMetadataResponse"
            }
          }
        }
      },
      "ListableCategoryBasicResponse": {
        "type": "object",
        "properties": {
          "data": {
            "title": "List of results.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CategoryBasicResponse"
            }
          }
        }
      },
      "ListableCategoryConnectionResponse": {
        "type": "object",
        "properties": {
          "data": {
            "title": "List of results.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CategoryConnectionResponse"
            }
          }
        }
      },
      "ListableCategoryFullResponse": {
        "type": "object",
        "properties": {
          "data": {
            "title": "List of results.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CategoryFullResponse"
            }
          }
        }
      },
      "ListableCategoryProductResponse": {
        "type": "object",
        "properties": {
          "data": {
            "title": "List of results.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CategoryProductResponse"
            }
          }
        }
      },
      "ListableCompoundAttributeDefinitionResponse": {
        "type": "object",
        "properties": {
          "data": {
            "title": "List of results.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CompoundAttributeDefinitionResponse"
            }
          }
        }
      },
      "ListableDictionaryAttributeResponse": {
        "type": "object",
        "properties": {
          "data": {
            "title": "List of results.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DictionaryAttributeResponse"
            }
          }
        }
      },
      "ListableDictionaryValueFilterResponse": {
        "type": "object",
        "properties": {
          "data": {
            "title": "List of results.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DictionaryValueFilterResponse"
            }
          }
        }
      },
      "ListableGroupedAttributeValuesDto": {
        "type": "object",
        "properties": {
          "data": {
            "title": "List of results.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GroupedAttributeValuesDto"
            }
          }
        }
      },
      "ListableGroupedCategoryConnectionResponse": {
        "type": "object",
        "properties": {
          "data": {
            "title": "List of results.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GroupedCategoryConnectionResponse"
            }
          }
        }
      },
      "ListableGroupedProductConnectionResponse": {
        "type": "object",
        "properties": {
          "data": {
            "title": "List of results.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GroupedProductConnectionResponse"
            }
          }
        }
      },
      "ListablePolicyDto": {
        "type": "object",
        "properties": {
          "data": {
            "title": "List of results.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PolicyDto"
            }
          }
        }
      },
      "ListableProductAll": {
        "type": "object",
        "properties": {
          "data": {
            "title": "List of results.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductAll"
            }
          }
        }
      },
      "ListableProductConnectionInfoResponse": {
        "type": "object",
        "properties": {
          "data": {
            "title": "List of results.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductConnectionInfoResponse"
            }
          }
        }
      },
      "ListableProductConnectionProductResponse": {
        "type": "object",
        "properties": {
          "data": {
            "title": "List of results.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductConnectionProductResponse"
            }
          }
        }
      },
      "ListableProductConnectionResponse": {
        "type": "object",
        "properties": {
          "data": {
            "title": "List of results.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductConnectionResponse"
            }
          }
        }
      },
      "ListableProductTemplateResponse": {
        "type": "object",
        "properties": {
          "data": {
            "title": "List of results.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductTemplateResponse"
            }
          }
        }
      },
      "ListableProductViewDto": {
        "type": "object",
        "properties": {
          "data": {
            "title": "List of results.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductViewDto"
            }
          }
        }
      },
      "ListableProductWithAttributeValuesResponse": {
        "type": "object",
        "properties": {
          "data": {
            "title": "List of results.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductWithAttributeValuesResponse"
            }
          }
        }
      },
      "ListableRelationResponse": {
        "type": "object",
        "properties": {
          "data": {
            "title": "List of results.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationResponse"
            }
          }
        }
      },
      "ListableString": {
        "type": "object",
        "properties": {
          "data": {
            "title": "List of results.",
            "type": "array",
            "items": {
              "title": "List of results.",
              "type": "string"
            }
          }
        }
      },
      "ListableWithCursorProductAll": {
        "type": "object",
        "properties": {
          "data": {
            "title": "List of results.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductAll"
            }
          },
          "nextCursor": {
            "title": "Cursor for next page.",
            "type": "string"
          }
        }
      },
      "ListableWithCursorProductViewDto": {
        "type": "object",
        "properties": {
          "data": {
            "title": "List of results.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductViewDto"
            }
          },
          "nextCursor": {
            "title": "Cursor for next page.",
            "type": "string"
          }
        }
      },
      "MatrixAttributeDefinitionDto": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "externalSource": {
            "title": "Derived from external source.",
            "type": "boolean"
          },
          "groupId": {
            "title": "Id of group that definition belongs to.",
            "type": "string"
          },
          "internal": {
            "title": "Flag of internal use only.",
            "type": "boolean"
          },
          "name": {
            "title": "Name of the attribute definition.",
            "type": "string"
          },
          "number": {
            "title": "Number of the attribute definition.",
            "type": "string"
          },
          "restrictions": {
            "$ref": "#/components/schemas/MatrixRestrictionDto"
          }
        }
      },
      "MatrixAttributeValueAddRequest": {
        "type": "object",
        "properties": {
          "definitionId": {
            "title": "Attribute definition ID for given value.",
            "type": "string"
          },
          "matrix": {
            "title": "Attribute values for product.",
            "type": "object",
            "additionalProperties": {
              "title": "Attribute values for product.",
              "type": "object",
              "additionalProperties": {
                "title": "Attribute values for product.",
                "type": "string"
              }
            }
          }
        }
      },
      "MatrixAttributeValueDto": {
        "type": "object",
        "properties": {
          "matrix": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "additionalProperties": {
                "type": "string",
                "description": "Attribute values for product."
              },
              "description": "Attribute values for product."
            },
            "description": "Attribute values for product."
          }
        }
      },
      "MatrixRestrictionDto": {
        "title": "Restrictions related to matrix data type.",
        "type": "object",
        "properties": {
          "matrix": {
            "$ref": "#/components/schemas/MatrixRestrictionsDto"
          }
        }
      },
      "MatrixRestrictionsDto": {
        "title": "Allows to specify possible values for matrix types.",
        "type": "object",
        "properties": {
          "columns": {
            "title": "Matrix column values.",
            "maxItems": 2147483647,
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdentifiableValueDto"
            }
          },
          "rows": {
            "title": "Matrix row values.",
            "maxItems": 2147483647,
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdentifiableValueDto"
            }
          }
        }
      },
      "MetadataFilteringViewsDto": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/FilteringViewsDto"
          }
        ]
      },
      "ModifyLabelInProductsRequestDto": {
        "required": [
          "labelId"
        ],
        "type": "object",
        "properties": {
          "labelId": {
            "title": "Identifier randomly generated by PIM. ID is unique across all labels.",
            "type": "string"
          },
          "productIds": {
            "title": "Set of identifiers randomly generated by PIM. IDs are unique across all products.",
            "maxItems": 100,
            "minItems": 1,
            "uniqueItems": true,
            "type": "array",
            "items": {
              "title": "Set of identifiers randomly generated by PIM. IDs are unique across all products.",
              "type": "string"
            }
          }
        }
      },
      "MoveCategoryRequest": {
        "type": "object",
        "properties": {
          "parentId": {
            "title": "Id of new parent category.",
            "type": "string"
          }
        }
      },
      "MultiLanguageDto": {
        "title": "Product's description.",
        "type": "object",
        "properties": {
          "value": {
            "title": "Map of multi language values.",
            "type": "object",
            "additionalProperties": {
              "title": "Map of multi language values.",
              "type": "string"
            }
          }
        }
      },
      "MultiLanguageListDto": {
        "title": "Context aware dictionary attribute value for product.",
        "type": "object",
        "properties": {
          "value": {
            "title": "Map of multi language values.",
            "type": "object",
            "additionalProperties": {
              "title": "Map of multi language values.",
              "type": "array",
              "items": {
                "title": "Map of multi language values.",
                "type": "string"
              }
            }
          }
        }
      },
      "PimVersion": {
        "type": "object",
        "properties": {
          "version": {
            "title": "Pim service version.",
            "type": "string"
          }
        }
      },
      "PolicyDto": {
        "title": "List of results.",
        "type": "object",
        "properties": {
          "entityId": {
            "title": "An identifier randomly generated by PIM.",
            "type": "string"
          },
          "policyId": {
            "title": "An identifier randomly generated by PIM. ID is unique across all policies.",
            "type": "string"
          },
          "readOnly": {
            "title": "Whether the policy is read only or not.",
            "type": "boolean"
          }
        }
      },
      "PolicyRequest": {
        "type": "object",
        "properties": {
          "policyId": {
            "title": "An identifier randomly generated by PIM. ID is unique across all policies.",
            "type": "string"
          },
          "readOnly": {
            "title": "Read only flag.",
            "type": "boolean",
            "enum": [
              false
            ]
          }
        }
      },
      "ProductAll": {
        "title": "List of results.",
        "type": "object",
        "properties": {
          "archived": {
            "title": "Is product in archive state.",
            "type": "boolean"
          },
          "assets": {
            "title": "Assigned to product asset ids.",
            "type": "array",
            "items": {
              "title": "Assigned to product asset ids.",
              "type": "string"
            }
          },
          "attributes": {
            "title": "Product's attributes.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttributeValueFull"
            }
          },
          "categories": {
            "title": "Associated with product category ids.",
            "type": "array",
            "items": {
              "title": "Associated with product category ids.",
              "type": "string"
            }
          },
          "contextStates": {
            "title": "Product's context publish states.",
            "type": "object",
            "additionalProperties": {
              "title": "Product's context publish states.",
              "type": "string",
              "enum": [
                "PLAYGROUND_ONLY",
                "TO_BE_PUBLISHED",
                "CONNECTED",
                "TO_BE_UNPUBLISHED",
                "NOT_CONNECTED",
                "TO_BE_ARCHIVED",
                "ARCHIVED"
              ]
            }
          },
          "createDate": {
            "title": "The timestamp of product creation.",
            "type": "integer",
            "format": "int64"
          },
          "dataSynced": {
            "title": "Data synced flag.",
            "type": "boolean"
          },
          "description": {
            "title": "Product's description.",
            "type": "string"
          },
          "id": {
            "title": "An identifier randomly generated by PIM. ID is unique across all products.",
            "type": "string"
          },
          "labels": {
            "title": "Associated with product label ids.",
            "type": "array",
            "items": {
              "title": "Associated with product label ids.",
              "type": "string"
            }
          },
          "lastUpdate": {
            "title": "The timestamp of last product update operation.",
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "title": "Product's name.",
            "type": "string"
          },
          "number": {
            "title": "Product's number.",
            "type": "string"
          },
          "productBundles": {
            "title": "Bundle complementary products.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductBundleDto"
            }
          },
          "productVariants": {
            "title": "Associated with product variants.",
            "type": "array",
            "items": {
              "title": "Associated with product variants.",
              "type": "string"
            }
          },
          "quantity": {
            "title": "A value specifying quantity associated with connection.",
            "type": "number"
          },
          "readOnly": {
            "title": "Is the product has read only access for current user.",
            "type": "boolean"
          },
          "relatedCategories": {
            "title": "Categories related with this product.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConnectionDto"
            }
          },
          "relatedProducts": {
            "title": "Products related with this product.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConnectionDto"
            }
          },
          "relatedProductsRelationSortingOrderSource": {
            "title": "Selected sorting order source for related product relations.",
            "type": "string",
            "enum": [
              "RELATION_DEFINITION",
              "PRODUCT"
            ]
          },
          "state": {
            "title": "Product's current publish state.",
            "type": "string",
            "enum": [
              "PLAYGROUND_ONLY",
              "TO_BE_PUBLISHED",
              "CONNECTED",
              "TO_BE_UNPUBLISHED",
              "NOT_CONNECTED",
              "TO_BE_ARCHIVED",
              "ARCHIVED"
            ]
          },
          "type": {
            "title": "Product type.",
            "type": "string",
            "enum": [
              "SINGLE",
              "BUNDLE",
              "GROUP",
              "VARIANT"
            ]
          },
          "variantParentId": {
            "title": "Variant of parent product.",
            "type": "string"
          }
        }
      },
      "ProductArchiveStateRequest": {
        "type": "object",
        "properties": {
          "ids": {
            "title": "Set of product ids.",
            "maxItems": 100,
            "minItems": 1,
            "uniqueItems": true,
            "type": "array",
            "items": {
              "title": "Set of product ids.",
              "type": "string"
            }
          }
        }
      },
      "ProductAttributeViewDto": {
        "title": "Product's Attributes.",
        "type": "object",
        "properties": {
          "column": {
            "title": "Column attribute values for product.",
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/MultiLanguageDto"
            }
          },
          "contextAwareDictionary": {
            "$ref": "#/components/schemas/MultiLanguageListDto"
          },
          "contextAwareSelect": {
            "$ref": "#/components/schemas/MultiLanguageListDto"
          },
          "copy": {
            "title": "Variant copy flag.",
            "type": "boolean"
          },
          "definingAttributes": {
            "title": "Variant defining attributes flag.",
            "type": "boolean"
          },
          "definitionId": {
            "title": "An identifier randomly generated by PIM. ID is unique across all attribute definitions.",
            "type": "string"
          },
          "dictionary": {
            "title": "Dictionary attribute values for product.",
            "type": "array",
            "deprecated": true,
            "items": {
              "title": "Dictionary attribute values for product.",
              "type": "string"
            }
          },
          "locked": {
            "title": "Variant lock flag.",
            "type": "boolean"
          },
          "mandatory": {
            "title": "Variant mandatory flag.",
            "type": "boolean"
          },
          "matrix": {
            "title": "Matrix attribute values for product.",
            "type": "object",
            "additionalProperties": {
              "title": "Matrix attribute values for product.",
              "type": "object",
              "additionalProperties": {
                "$ref": "#/components/schemas/MultiLanguageDto"
              }
            }
          },
          "readOnly": {
            "title": "Has attribute value read only access for current user.",
            "type": "boolean"
          },
          "select": {
            "title": "Select attribute values for product.",
            "type": "array",
            "deprecated": true,
            "items": {
              "title": "Select attribute values for product.",
              "type": "string"
            }
          },
          "value": {
            "$ref": "#/components/schemas/MultiLanguageDto"
          }
        }
      },
      "ProductBundleDto": {
        "title": "Product's Bundles.",
        "type": "object",
        "properties": {
          "productId": {
            "title": "An identifier randomly generated by PIM. ID is unique across all products.",
            "type": "string"
          },
          "quantity": {
            "title": "Quantity associated with product bundle.",
            "type": "number"
          }
        }
      },
      "ProductBundleRequest": {
        "type": "object",
        "properties": {
          "quantity": {
            "title": "Quantity associated with product bundle.",
            "minimum": 1,
            "type": "number"
          }
        }
      },
      "ProductConnectionInfoResponse": {
        "title": "List of results.",
        "type": "object",
        "properties": {
          "directions": {
            "title": "Directions used for given relation definition ID.",
            "type": "array",
            "items": {
              "title": "Directions used for given relation definition ID.",
              "type": "string",
              "enum": [
                "DIRECT",
                "REVERSE"
              ]
            }
          },
          "id": {
            "title": "Relation definition ID.",
            "type": "string"
          }
        }
      },
      "ProductConnectionMetadata": {
        "title": "Response with basic information about product in relaton.",
        "type": "object",
        "properties": {
          "archived": {
            "title": "A value specifying if product is in archive state.",
            "type": "boolean"
          },
          "contextStates": {
            "title": "A value specifying map of product context publish states.",
            "type": "object",
            "additionalProperties": {
              "title": "A value specifying map of product context publish states.",
              "type": "string",
              "enum": [
                "PLAYGROUND_ONLY",
                "TO_BE_PUBLISHED",
                "CONNECTED",
                "TO_BE_UNPUBLISHED",
                "NOT_CONNECTED",
                "TO_BE_ARCHIVED",
                "ARCHIVED"
              ]
            }
          },
          "createDate": {
            "title": "A value specifying the timestamp of product creation.",
            "type": "integer",
            "format": "int64"
          },
          "dataSynced": {
            "title": "A value specifying if product data are synchronized.",
            "type": "boolean"
          },
          "description": {
            "title": "A value specifying the product description.",
            "type": "string"
          },
          "id": {
            "title": "A value specifying the product id.",
            "type": "string"
          },
          "lastUpdate": {
            "title": "A value specifying the timestamp of last product update operation.",
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "title": "A value specifying the product name.",
            "type": "string"
          },
          "number": {
            "title": "A value specifying the product number.",
            "type": "string"
          },
          "quantity": {
            "title": "A value specifying quantity associated with connection.",
            "type": "number"
          },
          "state": {
            "title": "A value specifying the product current publish state.",
            "type": "string",
            "enum": [
              "PLAYGROUND_ONLY",
              "TO_BE_PUBLISHED",
              "CONNECTED",
              "TO_BE_UNPUBLISHED",
              "NOT_CONNECTED",
              "TO_BE_ARCHIVED",
              "ARCHIVED"
            ]
          }
        }
      },
      "ProductConnectionProductResponse": {
        "title": "List of results.",
        "type": "object",
        "properties": {
          "productId": {
            "type": "string"
          }
        }
      },
      "ProductConnectionRequest": {
        "type": "object",
        "properties": {
          "quantity": {
            "title": "Quantity associated with connection.",
            "type": "number"
          },
          "relationId": {
            "title": "An identifier randomly generated by PIM. ID is unique across all relations.",
            "type": "string"
          },
          "to": {
            "title": "Id of related product.",
            "type": "string"
          }
        }
      },
      "ProductConnectionResponse": {
        "title": "List of results.",
        "type": "object",
        "properties": {
          "leftProduct": {
            "$ref": "#/components/schemas/ProductConnectionMetadata"
          },
          "relation": {
            "$ref": "#/components/schemas/RelationResponse"
          },
          "rightProduct": {
            "$ref": "#/components/schemas/ProductConnectionMetadata"
          }
        }
      },
      "ProductConnectionUpdateRequest": {
        "type": "object",
        "properties": {
          "quantity": {
            "title": "Quantity associated with connection.",
            "type": "number"
          }
        }
      },
      "ProductConnectionsRemovalRequest": {
        "type": "object",
        "properties": {
          "to": {
            "title": "Id of related product.",
            "type": "string"
          }
        }
      },
      "ProductConnectionsRequest": {
        "type": "object",
        "properties": {
          "quantity": {
            "title": "Quantity associated with connection.",
            "type": "number"
          },
          "to": {
            "title": "Id of related product.",
            "type": "string"
          }
        }
      },
      "ProductCreateRequest": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "assets": {
            "title": "A value specifying the list of product assets id.",
            "type": "array",
            "items": {
              "title": "A value specifying the list of product assets id.",
              "type": "string"
            }
          },
          "attributes": {
            "title": "A value specifying the list of product attributes.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttributeValueFull"
            }
          },
          "categories": {
            "title": "A value specifying the list of product categories id.",
            "type": "array",
            "items": {
              "title": "A value specifying the list of product categories id.",
              "type": "string"
            }
          },
          "description": {
            "title": "A value specifying the product description.",
            "type": "string"
          },
          "labels": {
            "title": "A value specifying the list of product labels id.",
            "type": "array",
            "items": {
              "title": "A value specifying the list of product labels id.",
              "type": "string"
            }
          },
          "name": {
            "title": "A value specifying the product name.",
            "type": "string"
          },
          "number": {
            "title": "A value specifying the product number.",
            "type": "string"
          },
          "relatedProductsRelationSortingOrderSource": {
            "title": "A value specifying selected sorting order source for related product relations.",
            "type": "string",
            "enum": [
              "RELATION_DEFINITION",
              "PRODUCT"
            ]
          },
          "type": {
            "title": "A value specifying the product type.",
            "type": "string",
            "enum": [
              "SINGLE",
              "BUNDLE",
              "GROUP",
              "VARIANT"
            ]
          }
        }
      },
      "ProductIdListViewsRequestDto": {
        "required": [
          "ids"
        ],
        "type": "object",
        "properties": {
          "ids": {
            "title": "Product IDs that will be returned.",
            "maxItems": 100,
            "minItems": 0,
            "type": "array",
            "items": {
              "title": "Product IDs that will be returned.",
              "type": "string"
            }
          },
          "views": {
            "title": "List of entities views.",
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/AssetsFilteringViewsDto"
                },
                {
                  "$ref": "#/components/schemas/AttributesFilteringViewsDto"
                },
                {
                  "$ref": "#/components/schemas/BundlesFilteringViewsDto"
                },
                {
                  "$ref": "#/components/schemas/CategoriesFilteringViewsDto"
                },
                {
                  "$ref": "#/components/schemas/LabelsFilteringViewsDto"
                },
                {
                  "$ref": "#/components/schemas/MetadataFilteringViewsDto"
                },
                {
                  "$ref": "#/components/schemas/RelatedCategoriesFilteringViewsDto"
                },
                {
                  "$ref": "#/components/schemas/RelatedProductsFilteringViewsDto"
                },
                {
                  "$ref": "#/components/schemas/VariantsFilteringViewsDto"
                }
              ]
            }
          }
        }
      },
      "ProductIdViewsRequestDto": {
        "type": "object",
        "properties": {
          "views": {
            "title": "List of entities views.",
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/AssetsFilteringViewsDto"
                },
                {
                  "$ref": "#/components/schemas/AttributesFilteringViewsDto"
                },
                {
                  "$ref": "#/components/schemas/BundlesFilteringViewsDto"
                },
                {
                  "$ref": "#/components/schemas/CategoriesFilteringViewsDto"
                },
                {
                  "$ref": "#/components/schemas/LabelsFilteringViewsDto"
                },
                {
                  "$ref": "#/components/schemas/MetadataFilteringViewsDto"
                },
                {
                  "$ref": "#/components/schemas/RelatedCategoriesFilteringViewsDto"
                },
                {
                  "$ref": "#/components/schemas/RelatedProductsFilteringViewsDto"
                },
                {
                  "$ref": "#/components/schemas/VariantsFilteringViewsDto"
                }
              ]
            }
          }
        }
      },
      "ProductMetadataUpdateRequest": {
        "type": "object",
        "properties": {
          "description": {
            "$ref": "#/components/schemas/PropertyUpdateString"
          },
          "name": {
            "$ref": "#/components/schemas/PropertyUpdateString"
          },
          "number": {
            "title": "Product's number value.",
            "type": "string"
          }
        }
      },
      "ProductMetadataViewDto": {
        "title": "Product's metadata.",
        "type": "object",
        "properties": {
          "archived": {
            "title": "Flag defines if product is in archive state.",
            "type": "boolean"
          },
          "contextStates": {
            "title": "Product's context publish states.",
            "type": "object",
            "additionalProperties": {
              "title": "Product's context publish states.",
              "type": "string",
              "enum": [
                "PLAYGROUND_ONLY",
                "TO_BE_PUBLISHED",
                "CONNECTED",
                "TO_BE_UNPUBLISHED",
                "NOT_CONNECTED",
                "TO_BE_ARCHIVED",
                "ARCHIVED"
              ]
            }
          },
          "createDate": {
            "title": "The timestamp of product creation.",
            "type": "integer",
            "format": "int64"
          },
          "dataSynced": {
            "title": "Data synced flag.",
            "type": "boolean"
          },
          "description": {
            "$ref": "#/components/schemas/MultiLanguageDto"
          },
          "lastUpdate": {
            "title": "The timestamp of last product update operation.",
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "$ref": "#/components/schemas/MultiLanguageDto"
          },
          "number": {
            "title": "Product's number.",
            "type": "string"
          },
          "readOnly": {
            "title": "Flag defines if the product has read only access for current user.",
            "type": "boolean"
          },
          "relatedProductsRelationSortingOrderSource": {
            "title": "Selected sorting order source for related product relations.",
            "type": "string",
            "enum": [
              "RELATION_DEFINITION",
              "PRODUCT"
            ]
          },
          "state": {
            "title": "Product's current publish state.",
            "type": "string",
            "enum": [
              "PLAYGROUND_ONLY",
              "TO_BE_PUBLISHED",
              "CONNECTED",
              "TO_BE_UNPUBLISHED",
              "NOT_CONNECTED",
              "TO_BE_ARCHIVED",
              "ARCHIVED"
            ]
          },
          "type": {
            "title": "Product's type.",
            "type": "string",
            "enum": [
              "SINGLE",
              "BUNDLE",
              "GROUP",
              "VARIANT"
            ]
          },
          "variantParentId": {
            "title": "Variant of parent product.",
            "type": "string"
          }
        }
      },
      "ProductNumberListViewsRequestDto": {
        "type": "object",
        "properties": {
          "numbers": {
            "title": "Product numbers that will be returned.",
            "maxItems": 100,
            "minItems": 1,
            "type": "array",
            "items": {
              "title": "Product numbers that will be returned.",
              "type": "string"
            }
          },
          "page": {
            "title": "A number sequence representing a block of items to return as a result set.",
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "title": "Size of a block of items to return. It corresponds with the page parameter.",
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "views": {
            "title": "List of entities views.",
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/AssetsFilteringViewsDto"
                },
                {
                  "$ref": "#/components/schemas/AttributesFilteringViewsDto"
                },
                {
                  "$ref": "#/components/schemas/BundlesFilteringViewsDto"
                },
                {
                  "$ref": "#/components/schemas/CategoriesFilteringViewsDto"
                },
                {
                  "$ref": "#/components/schemas/LabelsFilteringViewsDto"
                },
                {
                  "$ref": "#/components/schemas/MetadataFilteringViewsDto"
                },
                {
                  "$ref": "#/components/schemas/RelatedCategoriesFilteringViewsDto"
                },
                {
                  "$ref": "#/components/schemas/RelatedProductsFilteringViewsDto"
                },
                {
                  "$ref": "#/components/schemas/VariantsFilteringViewsDto"
                }
              ]
            }
          }
        }
      },
      "ProductTemplateRequest": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "Product template name.",
            "type": "string"
          }
        }
      },
      "ProductTemplateResponse": {
        "title": "List of results.",
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "Product template name.",
            "type": "string"
          },
          "productId": {
            "title": "An identifier randomly generated by PIM. ID is unique across all product templates.",
            "type": "string"
          }
        }
      },
      "ProductValidationIssueDto": {
        "title": "Detailed list of validation issues.",
        "type": "object",
        "properties": {
          "categoryId": {
            "title": "Category ID for given value.",
            "type": "string"
          },
          "definitionId": {
            "title": "Attribute definition ID for given value.",
            "type": "string"
          },
          "message": {
            "title": "Human readable description of issue.",
            "type": "string"
          },
          "missingAttributeDefinitionId": {
            "title": "Missing attribute definition ID for compound attribute.",
            "type": "string"
          },
          "statusCode": {
            "title": "Error code of issue.",
            "type": "string",
            "enum": [
              "INVALID_VALUE",
              "MISSING_CATEGORY_ATTRIBUTE",
              "MISSING_CATEGORY_VALUE",
              "INVALID_CATEGORY_CONSTRAINT",
              "MISSING_PRODUCT",
              "MISSING_COMPOUND_ATTRIBUTE",
              "MISSING_VARIANT_ATTRIBUTE",
              "INVALID_VARIANT_VALUE",
              "DICTIONARY_VALUE_NOT_EXIST_IN_FILTER"
            ]
          }
        }
      },
      "ProductValidationIssueResponse": {
        "type": "object",
        "properties": {
          "id": {
            "title": "An identifier randomly generated by PIM. ID is unique across all products.",
            "type": "string"
          },
          "issues": {
            "title": "Detailed list of validation issues.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductValidationIssueDto"
            }
          },
          "status": {
            "title": "General product validation status.",
            "type": "string",
            "enum": [
              "SUCCESSFUL",
              "FAILED"
            ]
          }
        }
      },
      "ProductValidationRequest": {
        "type": "object",
        "properties": {
          "attributes": {
            "title": "Product's attributes.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidableAttribute"
            }
          },
          "id": {
            "title": "A value specifying the product id.",
            "type": "string"
          }
        }
      },
      "ProductVariantAttributeDto": {
        "type": "object",
        "properties": {
          "copy": {
            "title": "Variant copy flag.",
            "type": "boolean"
          },
          "definingAttributes": {
            "title": "Variant defining attributes flag.",
            "type": "boolean"
          },
          "locked": {
            "title": "Lock flag to determine that attribute is locked/unlocked.",
            "type": "boolean"
          },
          "mandatory": {
            "title": "Variant mandatory flag.",
            "type": "boolean"
          }
        }
      },
      "ProductViewDto": {
        "type": "object",
        "properties": {
          "assets": {
            "title": "Associated with product asset ids.",
            "type": "array",
            "items": {
              "title": "Associated with product asset ids.",
              "type": "string"
            }
          },
          "attributes": {
            "title": "Product's Attributes.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductAttributeViewDto"
            }
          },
          "categories": {
            "title": "Associated with product category ids.",
            "type": "array",
            "items": {
              "title": "Associated with product category ids.",
              "type": "string"
            }
          },
          "id": {
            "title": "An identifier randomly generated by PIM. ID is unique across all products.",
            "type": "string"
          },
          "labels": {
            "title": "Associated with product label ids.",
            "type": "array",
            "items": {
              "title": "Associated with product label ids.",
              "type": "string"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/ProductMetadataViewDto"
          },
          "productBundles": {
            "title": "Product's Bundles.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductBundleDto"
            }
          },
          "productVariants": {
            "title": "Associated with product variant ids.",
            "type": "array",
            "items": {
              "title": "Associated with product variant ids.",
              "type": "string"
            }
          },
          "relatedCategories": {
            "title": "Related categories.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConnectionDto"
            }
          },
          "relatedProducts": {
            "title": "Related products.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConnectionDto"
            }
          }
        }
      },
      "ProductWithAttributeValuesResponse": {
        "title": "List of results.",
        "type": "object",
        "properties": {
          "attributeValues": {
            "title": "List of attribute values.",
            "type": "array",
            "items": {
              "title": "List of attribute values.",
              "type": "string"
            }
          },
          "productName": {
            "title": "Product name.",
            "type": "string"
          }
        }
      },
      "PropertyUpdateInteger": {
        "title": "New value of updated property.",
        "type": "object",
        "properties": {
          "value": {
            "title": "Nullable value for partial update.",
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "PropertyUpdateString": {
        "title": "New value of updated property.",
        "type": "object",
        "properties": {
          "value": {
            "title": "Nullable value for partial update.",
            "type": "string"
          }
        }
      },
      "RangeRestrictionsDto": {
        "title": "Allows to specify the spectrum of allowed values.",
        "type": "object",
        "properties": {
          "max": {
            "title": "Defines maximum allowed value.",
            "type": "string"
          },
          "min": {
            "title": "Defines minimum allowed value.",
            "type": "string"
          },
          "step": {
            "title": "Defines incremental step between minimum and maximum value.",
            "type": "string"
          }
        }
      },
      "RelatedCategoriesFilteringViewsDto": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/FilteringViewsDto"
          }
        ]
      },
      "RelatedProductsFilteringViewsDto": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/FilteringViewsDto"
          }
        ]
      },
      "RelationFilter": {
        "title": "Filters by which relations are searched.",
        "type": "object",
        "properties": {
          "type": {
            "title": "Define filter type.",
            "type": "string",
            "enum": [
              "NUMBER_IN",
              "ID_IN"
            ]
          },
          "values": {
            "title": "Define the list of filter values.",
            "type": "array",
            "items": {
              "title": "Define the list of filter values.",
              "type": "string"
            }
          }
        }
      },
      "RelationFilteringRequest": {
        "type": "object",
        "properties": {
          "filters": {
            "title": "Filters by which relations are searched.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationFilter"
            }
          },
          "page": {
            "title": "A number sequence representing a block of items to return as a result set.",
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "title": "Size of a block of items to return. It corresponds with the page parameter.",
            "maximum": 1000,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "RelationRequest": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "description": {
            "title": "Text to display describing relation.",
            "type": "string"
          },
          "direction": {
            "title": "Direction of relation (ONE_WAY or TWO_WAY).",
            "type": "string"
          },
          "name": {
            "title": "Name of the relation.",
            "type": "string"
          },
          "number": {
            "title": "Number of the relation.",
            "type": "string"
          },
          "quantityEnabled": {
            "title": "Is quantity enable for relation.",
            "type": "boolean"
          },
          "reverseName": {
            "title": "Reverse name of the relation (required if has two way direction).",
            "type": "string"
          }
        }
      },
      "RelationResponse": {
        "title": "List of results.",
        "type": "object",
        "properties": {
          "description": {
            "title": "Text to display describing relation.",
            "type": "string"
          },
          "direction": {
            "title": "Direction of relation (ONE_WAY or TWO_WAY).",
            "type": "string"
          },
          "id": {
            "title": "An identifier randomly generated by PIM. ID is unique across all relation definitions.",
            "type": "string"
          },
          "name": {
            "title": "Name of the relation.",
            "type": "string"
          },
          "number": {
            "title": "Number of the relation.",
            "type": "string"
          },
          "quantityEnabled": {
            "title": "Is quantity enable for relation.",
            "type": "boolean"
          },
          "reverseName": {
            "title": "Reverse name of the relation.",
            "type": "string"
          }
        }
      },
      "RemoveOrganizationDataResponse": {
        "type": "object",
        "properties": {
          "dryRun": {
            "type": "boolean"
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeleteResult"
            }
          }
        }
      },
      "RenameAttributeGroupRequest": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "New name of the attribute group.",
            "type": "string"
          }
        }
      },
      "RestrictionsDto": {
        "title": "Restrictions related to specified data type.",
        "type": "object",
        "properties": {
          "column": {
            "$ref": "#/components/schemas/ColumnRestrictionsDto"
          },
          "enum": {
            "$ref": "#/components/schemas/SelectRestrictionsDto"
          },
          "matrix": {
            "$ref": "#/components/schemas/MatrixRestrictionsDto"
          },
          "range": {
            "$ref": "#/components/schemas/RangeRestrictionsDto"
          },
          "text": {
            "$ref": "#/components/schemas/TextRestrictionsDto"
          }
        }
      },
      "SaveProductsAttributesBulkRequest": {
        "required": [
          "attributeDefinitionId",
          "productIds"
        ],
        "type": "object",
        "properties": {
          "attributeDefinitionId": {
            "type": "string"
          },
          "attributeValues": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "productIds": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "SaveProductsAttributesByIdsRequest": {
        "required": [
          "attributeDefinitionId"
        ],
        "type": "object",
        "properties": {
          "attributeDefinitionId": {
            "title": "Attribute definition ID for given value.",
            "type": "string"
          },
          "attributeValues": {
            "title": "Attribute values for product.",
            "type": "array",
            "items": {
              "title": "Attribute values for product.",
              "type": "string"
            }
          },
          "productIds": {
            "title": "Product IDs that will be affected.",
            "maxItems": 100,
            "minItems": 1,
            "uniqueItems": true,
            "type": "array",
            "items": {
              "title": "Product IDs that will be affected.",
              "type": "string"
            }
          }
        }
      },
      "SelectAttributeValueDto": {
        "title": "Defines possible select values.",
        "required": [
          "value"
        ],
        "type": "object",
        "properties": {
          "metadata": {
            "title": "Custom metadata for select attribute.",
            "maxLength": 500,
            "minLength": 0,
            "type": "string"
          },
          "number": {
            "title": "Number of select attribute.",
            "maxLength": 500,
            "minLength": 0,
            "type": "string"
          },
          "value": {
            "title": "Value of select attribute.",
            "type": "string"
          },
          "valueId": {
            "title": "An identifier randomly generated by PIM. ID is unique across all select attribute values.",
            "type": "string"
          }
        }
      },
      "SelectRestrictionsDto": {
        "title": "Allows to specify possible values for enumerated types.",
        "type": "object",
        "properties": {
          "type": {
            "title": "Defines custom type.",
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "values": {
            "title": "Defines possible select values.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SelectAttributeValueDto"
            }
          }
        }
      },
      "SelectValueIdDto": {
        "title": "Duplicated select values.",
        "type": "object",
        "properties": {
          "selectValueId": {
            "title": "Duplicated select value ID.",
            "type": "string"
          }
        }
      },
      "SetCategoryDictionaryAttributeValuesRequest": {
        "type": "object",
        "properties": {
          "valueIds": {
            "title": "List of dictionary value ids.",
            "type": "array",
            "items": {
              "title": "List of dictionary value ids.",
              "type": "string"
            }
          }
        }
      },
      "SetDictionaryValuesRequest": {
        "type": "object",
        "properties": {
          "valueIds": {
            "title": "List of dictionary value ids.",
            "type": "array",
            "items": {
              "title": "List of dictionary value ids.",
              "type": "string"
            }
          }
        }
      },
      "SetProductAssets": {
        "type": "object",
        "properties": {
          "assets": {
            "title": "Assets ids.",
            "type": "array",
            "items": {
              "title": "Assets ids.",
              "type": "string"
            }
          }
        }
      },
      "SimpleAttributeDefinitionRequest": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "charset": {
            "title": "Charset for attribute definition.",
            "type": "string"
          },
          "contentType": {
            "title": "Content type for attribute definitions.",
            "type": "string"
          },
          "dataType": {
            "title": "Data type for attribute definition.",
            "type": "string",
            "enum": [
              "boolean",
              "integer",
              "decimal",
              "date",
              "time",
              "date_time",
              "location",
              "single_select",
              "multi_select",
              "text",
              "formatted_text",
              "pattern",
              "multiline",
              "column",
              "matrix",
              "dictionary"
            ]
          },
          "externalSource": {
            "title": "Derived from external source.",
            "type": "boolean"
          },
          "groupId": {
            "title": "Id of group that definition belongs to.",
            "type": "string"
          },
          "internal": {
            "title": "Flag of internal use only.",
            "type": "boolean"
          },
          "name": {
            "title": "Name of the attribute definition.",
            "type": "string"
          },
          "number": {
            "title": "Number of the attribute definition.",
            "type": "string"
          },
          "restrictions": {
            "$ref": "#/components/schemas/RestrictionsDto"
          },
          "unit": {
            "title": "Unit for attribute definition.",
            "type": "string"
          }
        }
      },
      "TextRestrictionsDto": {
        "title": "Allows to specify requirements for textual values.",
        "type": "object",
        "properties": {
          "maxLength": {
            "title": "Defines the maximum length of text.",
            "type": "integer",
            "format": "int32"
          },
          "pattern": {
            "title": "Defines allowed regular expression pattern for values.",
            "type": "string"
          },
          "whitespaces": {
            "title": "Defines whether whitespaces are allowed or not.",
            "type": "boolean"
          }
        }
      },
      "UpdateAttributeDto": {
        "type": "object",
        "properties": {
          "definitionId": {
            "title": "Attribute id that we want to update or set.",
            "type": "string"
          },
          "dictionaryValueIds": {
            "title": "Field needed when it is dictionary value. Ids of chosen options.",
            "type": "array",
            "items": {
              "title": "Field needed when it is dictionary value. Ids of chosen options.",
              "type": "string"
            }
          },
          "selectValueIds": {
            "title": "Field needed when it is select value. Ids of chosen options.",
            "type": "array",
            "items": {
              "title": "Field needed when it is select value. Ids of chosen options.",
              "type": "string"
            }
          },
          "value": {
            "title": "Field needed when it is simple value.",
            "type": "string"
          }
        }
      },
      "UpdateAttributeGroupNumberRequest": {
        "required": [
          "number"
        ],
        "type": "object",
        "properties": {
          "number": {
            "title": "New number of the attribute group.",
            "type": "string"
          }
        }
      },
      "UpdateCategoryAttributeRequest": {
        "type": "object",
        "properties": {
          "attributeValue": {
            "$ref": "#/components/schemas/PropertyUpdateString"
          },
          "copyAttribute": {
            "title": "Flag determines that attribute will be copied from parent to children.",
            "type": "boolean"
          },
          "locked": {
            "title": "Flag determines that attribute is locked.",
            "type": "boolean"
          },
          "mandatory": {
            "title": "Flag determines that attribute has mandatory field.",
            "type": "boolean"
          }
        }
      },
      "UpdateCategoryColumnAttributeRequest": {
        "type": "object",
        "properties": {
          "column": {
            "title": "New value of the column attribute.",
            "type": "object",
            "additionalProperties": {
              "title": "New value of the column attribute.",
              "type": "string"
            }
          },
          "copyAttribute": {
            "title": "Copy attribute flag to determine that attribute is being copied.",
            "type": "boolean",
            "deprecated": true
          },
          "locked": {
            "title": "Lock flag to determine that attribute is locked/unlocked.",
            "type": "boolean",
            "deprecated": true
          },
          "mandatory": {
            "title": "Mandatory flag to determine that attribute has mandatory field.",
            "type": "boolean",
            "deprecated": true
          }
        }
      },
      "UpdateCategoryMatrixAttributeRequest": {
        "type": "object",
        "properties": {
          "copyAttribute": {
            "title": "Copy attribute flag to determine that attribute is being copied.",
            "type": "boolean",
            "deprecated": true
          },
          "locked": {
            "title": "Lock flag to determine that attribute is locked/unlocked.",
            "type": "boolean",
            "deprecated": true
          },
          "mandatory": {
            "title": "Mandatory flag to determine that attribute has mandatory field.",
            "type": "boolean",
            "deprecated": true
          },
          "matrix": {
            "title": "New value of the matrix attribute.",
            "type": "object",
            "additionalProperties": {
              "title": "New value of the matrix attribute.",
              "type": "object",
              "additionalProperties": {
                "title": "New value of the matrix attribute.",
                "type": "string"
              }
            }
          }
        }
      },
      "UpdateCategoryRequest": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "description": {
            "title": "New description for catalog or category.",
            "type": "string"
          },
          "name": {
            "title": "New name for catalog or category.",
            "maxLength": 1000,
            "minLength": 1,
            "type": "string"
          },
          "number": {
            "title": "New number for catalog or category.",
            "maxLength": 1000,
            "minLength": 0,
            "type": "string"
          }
        }
      },
      "UpdateProductStateRequest": {
        "type": "object",
        "properties": {
          "action": {
            "title": "Action to be performed.",
            "type": "string",
            "enum": [
              "PUBLISH",
              "UNPUBLISH",
              "ARCHIVE",
              "UNARCHIVE",
              "SYNC",
              "CONNECT",
              "DISCONNECT"
            ]
          },
          "ids": {
            "title": "Set of product ids.",
            "maxItems": 100,
            "minItems": 1,
            "uniqueItems": true,
            "type": "array",
            "items": {
              "title": "Set of product ids.",
              "type": "string"
            }
          }
        }
      },
      "UpdateProductStateResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "additionalProperties": {
              "type": "integer",
              "format": "int64"
            }
          }
        }
      },
      "ValidableAttribute": {
        "title": "Product's attributes.",
        "type": "object",
        "properties": {
          "definitionId": {
            "title": "Attribute definition ID for given value.",
            "type": "string"
          },
          "dictionaryValueIds": {
            "title": "List of dictionary values IDs.",
            "type": "array",
            "items": {
              "title": "List of dictionary values IDs.",
              "type": "string"
            }
          },
          "selectValueIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "values": {
            "title": "Attribute values for product.",
            "type": "array",
            "items": {
              "title": "Attribute values for product.",
              "type": "string"
            }
          }
        }
      },
      "ValueValidationIssue": {
        "title": "Validation issues.",
        "type": "object",
        "properties": {
          "message": {
            "title": "Validation message.",
            "type": "string"
          },
          "statusCode": {
            "title": "Validation issue code.",
            "type": "string",
            "enum": [
              "INVALID_VALUE",
              "MISSING_CATEGORY_ATTRIBUTE",
              "MISSING_CATEGORY_VALUE",
              "INVALID_CATEGORY_CONSTRAINT",
              "MISSING_PRODUCT",
              "MISSING_COMPOUND_ATTRIBUTE",
              "MISSING_VARIANT_ATTRIBUTE",
              "INVALID_VARIANT_VALUE",
              "DICTIONARY_VALUE_NOT_EXIST_IN_FILTER"
            ]
          }
        }
      },
      "ValueValidationRequest": {
        "type": "object",
        "properties": {
          "definitionId": {
            "title": "Id of the simple attribute definition.",
            "type": "string"
          },
          "value": {
            "title": "Attribute value.",
            "type": "string"
          }
        }
      },
      "ValueValidationResponse": {
        "type": "object",
        "properties": {
          "issues": {
            "title": "Validation issues.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValueValidationIssue"
            }
          },
          "status": {
            "title": "Validation status.",
            "type": "string",
            "enum": [
              "SUCCESSFUL",
              "FAILED"
            ]
          }
        }
      },
      "VariantsFilteringViewsDto": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/FilteringViewsDto"
          }
        ]
      }
    },
    "securitySchemes": {
      "oauth2": {
        "flows": {
          "implicit": {
            "authorizationUrl": "https://idp.bluestonepim.com/op/auth",
            "scopes": {
              "openid profile systemRoles permissions organization email name nickname": "All needed scopes."
            }
          }
        },
        "type": "oauth2"
      },
      "mapiKey": {
        "in": "header",
        "name": "api-key",
        "type": "apiKey"
      }
    }
  },
  "servers": [
    {
      "url": "https://mapi.bluestonepim.com/pim/"
    }
  ],
  "openapi": "3.0.1",
  "paths": {
    "/assets": {
      "post": {
        "operationId": "synchronizeAssets",
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          }
        },
        "tags": [
          "Maintenance"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "UPDATE",
            "module": "PRODUCTS"
          }
        ]
      }
    },
    "/async/status/{taskId}": {
      "get": {
        "operationId": "getJobStatus",
        "parameters": [
          {
            "in": "path",
            "name": "taskId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobStatusResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          }
        },
        "summary": "Get async task status.",
        "tags": [
          "Bulk"
        ]
      }
    },
    "/attributeGroups": {
      "get": {
        "operationId": "find_2",
        "parameters": [
          {
            "allowEmptyValue": true,
            "description": "Number of page. default 0",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Size of page. default 1000",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "description": "Context of presented entity.",
            "in": "header",
            "name": "context",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Use fallback for context",
            "in": "header",
            "name": "context-fallback",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListableAttributeGroupResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          }
        },
        "summary": "List all attribute groups.",
        "tags": [
          "Attribute groups"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "LIST",
            "module": "ATTRIBUTE_DEFINITIONS"
          }
        ]
      },
      "post": {
        "operationId": "create_9",
        "parameters": [
          {
            "description": "Context of presented entity.",
            "in": "header",
            "name": "context",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Use fallback for context",
            "in": "header",
            "name": "context-fallback",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AttributeGroupRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Location": {
                "description": "Location URI",
                "schema": {
                  "type": "string"
                }
              },
              "Resource-Id": {
                "description": "Entity identifier",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          }
        },
        "summary": "Create new attribute group.",
        "tags": [
          "Attribute groups"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "ADD",
            "module": "ATTRIBUTE_DEFINITIONS"
          }
        ]
      }
    },
    "/attributeGroups/other/definitions": {
      "get": {
        "operationId": "findDefinitionsWithoutGroup",
        "parameters": [
          {
            "allowEmptyValue": true,
            "description": "Number of page. default 0",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Size of page. default 1000",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "description": "Context of presented entity.",
            "in": "header",
            "name": "context",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Use fallback for context",
            "in": "header",
            "name": "context-fallback",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListableAttributeDefinitionResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          }
        },
        "summary": "List definitions that are not in any group.",
        "tags": [
          "Attribute groups"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "LIST",
            "module": "ATTRIBUTE_DEFINITIONS"
          }
        ]
      }
    },
    "/attributeGroups/other/definitions/order": {
      "put": {
        "operationId": "setOtherDefinitionsOrderStrategy",
        "parameters": [
          {
            "in": "query",
            "name": "orderByName",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "Change order strategy for definitions without group.",
        "tags": [
          "Attribute groups"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "DETAILS",
            "module": "ATTRIBUTE_DEFINITIONS"
          }
        ]
      }
    },
    "/attributeGroups/other/definitions/{definitionId}": {
      "put": {
        "operationId": "moveAttributeDefinitionInGroup",
        "parameters": [
          {
            "in": "path",
            "name": "definitionId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "targetPosition",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          }
        },
        "summary": "Change attribute's order.",
        "tags": [
          "Attribute groups"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "DETAILS",
            "module": "ATTRIBUTE_DEFINITIONS"
          }
        ]
      }
    },
    "/attributeGroups/rootGroup": {
      "get": {
        "operationId": "getAttributeRootGroup",
        "parameters": [
          {
            "description": "Context of presented entity.",
            "in": "header",
            "name": "context",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Use fallback for context",
            "in": "header",
            "name": "context-fallback",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttributeGroupResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          }
        },
        "summary": "Get attribute root group.",
        "tags": [
          "Attribute groups"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "DETAILS",
            "module": "ATTRIBUTE_DEFINITIONS"
          }
        ]
      }
    },
    "/attributeGroups/{id}": {
      "delete": {
        "operationId": "delete_6",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "Delete attribute group.",
        "tags": [
          "Attribute groups"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "DELETE",
            "module": "ATTRIBUTE_DEFINITIONS"
          }
        ]
      },
      "put": {
        "operationId": "moveGroup",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "targetPosition",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          }
        },
        "summary": "Change group's order.",
        "tags": [
          "Attribute groups"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "DETAILS",
            "module": "ATTRIBUTE_DEFINITIONS"
          }
        ]
      }
    },
    "/attributeGroups/{id}/definitions": {
      "get": {
        "operationId": "findDefinitionsInGroup",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Number of page. default 0",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Size of page. default 1000",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "description": "Context of presented entity.",
            "in": "header",
            "name": "context",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Use fallback for context",
            "in": "header",
            "name": "context-fallback",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListableAttributeDefinitionResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "List definitions in attribute group.",
        "tags": [
          "Attribute groups"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "DETAILS",
            "module": "ATTRIBUTE_DEFINITIONS"
          }
        ]
      }
    },
    "/attributeGroups/{id}/definitions/order": {
      "put": {
        "operationId": "setDefinitionsOrderStrategyInGroup",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "orderByName",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "Change order strategy for definitions in group.",
        "tags": [
          "Attribute groups"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "DETAILS",
            "module": "ATTRIBUTE_DEFINITIONS"
          }
        ]
      }
    },
    "/attributeGroups/{id}/definitions/{definitionId}": {
      "put": {
        "operationId": "moveAttributeDefinition",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "definitionId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "targetPosition",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          }
        },
        "summary": "Change attribute's order in group.",
        "tags": [
          "Attribute groups"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "DETAILS",
            "module": "ATTRIBUTE_DEFINITIONS"
          }
        ]
      }
    },
    "/attributeGroups/{id}/name": {
      "put": {
        "operationId": "rename",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Context of presented entity.",
            "in": "header",
            "name": "context",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Use fallback for context",
            "in": "header",
            "name": "context-fallback",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RenameAttributeGroupRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "Rename attribute group.",
        "tags": [
          "Attribute groups"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "UPDATE",
            "module": "ATTRIBUTE_DEFINITIONS"
          }
        ]
      }
    },
    "/attributeGroups/{id}/number": {
      "put": {
        "operationId": "updateNumber",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAttributeGroupNumberRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "Change attribute group number.",
        "tags": [
          "Attribute groups"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "UPDATE",
            "module": "ATTRIBUTE_DEFINITIONS"
          }
        ]
      }
    },
    "/catalogs": {
      "get": {
        "operationId": "listCatalogs",
        "parameters": [
          {
            "allowEmptyValue": true,
            "description": "Number of page. default 0",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Size of page. default 1000",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "description": "Archive state.",
            "in": "query",
            "name": "archiveState",
            "required": false,
            "schema": {
              "type": "string",
              "default": "active"
            }
          },
          {
            "description": "Context of presented entity.",
            "in": "header",
            "name": "context",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Use fallback for context",
            "in": "header",
            "name": "context-fallback",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListableCategoryBasicResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          }
        },
        "summary": "List catalogs in the system.",
        "tags": [
          "Catalogs"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "LIST",
            "module": "CATALOG"
          }
        ]
      }
    },
    "/catalogs/nodes": {
      "post": {
        "operationId": "create_8",
        "parameters": [
          {
            "in": "query",
            "name": "validation",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "NAME"
              ]
            }
          },
          {
            "description": "Context of presented entity.",
            "in": "header",
            "name": "context",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Use fallback for context",
            "in": "header",
            "name": "context-fallback",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCategoryRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Location": {
                "description": "Location URI",
                "schema": {
                  "type": "string"
                }
              },
              "Resource-Id": {
                "description": "Entity identifier",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Conflict"
          }
        },
        "summary": "Create new catalog or category.",
        "tags": [
          "Catalog nodes"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "ADD",
            "module": "CATALOG"
          }
        ]
      }
    },
    "/catalogs/nodes/assets/{id}": {
      "get": {
        "operationId": "getCategoriesByAssetId",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Number of page. default 0",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Size of page. default 1000",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListableCategoryBasicResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          }
        },
        "summary": "List categories associated with asset.",
        "tags": [
          "Catalog node assets"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "LIST",
            "module": "CATALOG"
          }
        ]
      }
    },
    "/catalogs/nodes/attributeDefinition/{attributeDefinitionId}": {
      "get": {
        "operationId": "findByCategoryLevelAttributes",
        "parameters": [
          {
            "in": "path",
            "name": "attributeDefinitionId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Number of page. default 0",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Size of page. default 1000",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "description": "Archive state.",
            "in": "query",
            "name": "archiveState",
            "required": false,
            "schema": {
              "type": "string",
              "default": "active"
            }
          },
          {
            "description": "Context of presented entity.",
            "in": "header",
            "name": "context",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Use fallback for context",
            "in": "header",
            "name": "context-fallback",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListableCategoryBasicResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "List all catalog nodes that use the attribute definition.",
        "tags": [
          "Catalog nodes"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "DETAILS",
            "module": "CATALOG"
          }
        ]
      }
    },
    "/catalogs/nodes/attributes": {
      "get": {
        "operationId": "list",
        "parameters": [
          {
            "allowEmptyValue": true,
            "description": "Number of page. default 0",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Size of page. default 1000",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "description": "Archive state.",
            "in": "query",
            "name": "archiveState",
            "required": false,
            "schema": {
              "type": "string",
              "default": "active"
            }
          },
          {
            "in": "query",
            "name": "value",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Context of presented entity.",
            "in": "header",
            "name": "context",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Use fallback for context",
            "in": "header",
            "name": "context-fallback",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListableCategoryAttributeBaseMetadataResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          }
        },
        "summary": "List all category level attributes.",
        "tags": [
          "Catalog node attributes"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "LIST",
            "module": "ATTRIBUTES"
          }
        ]
      }
    },
    "/catalogs/nodes/list": {
      "post": {
        "operationId": "getFilteredNodes",
        "parameters": [
          {
            "description": "Context of presented entity.",
            "in": "header",
            "name": "context",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Use fallback for context",
            "in": "header",
            "name": "context-fallback",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CategoryFilteringRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListableCategoryBasicResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          }
        },
        "summary": "Describe catalog nodes.",
        "tags": [
          "Catalog nodes"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "DETAILS",
            "module": "CATALOG"
          }
        ]
      }
    },
    "/catalogs/nodes/{id}": {
      "delete": {
        "operationId": "deleteCategoryNode",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "Delete catalog node structure.",
        "tags": [
          "Catalog nodes"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "DELETE",
            "module": "CATALOG"
          }
        ]
      },
      "get": {
        "operationId": "getNode",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Archive state.",
            "in": "query",
            "name": "archiveState",
            "required": false,
            "schema": {
              "type": "string",
              "default": "active"
            }
          },
          {
            "description": "Context of presented entity.",
            "in": "header",
            "name": "context",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Use fallback for context",
            "in": "header",
            "name": "context-fallback",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryBasicResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "Describe catalog node.",
        "tags": [
          "Catalog nodes"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "DETAILS",
            "module": "CATALOG"
          }
        ]
      },
      "put": {
        "operationId": "updateCatalogNode",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Context of presented entity.",
            "in": "header",
            "name": "context",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCategoryRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Conflict"
          }
        },
        "summary": "Update catalog node.",
        "tags": [
          "Catalog nodes"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "UPDATE",
            "module": "CATALOG"
          }
        ]
      }
    },
    "/catalogs/nodes/{id}/assets": {
      "get": {
        "operationId": "getCategoryAssets",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListableString"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "List assets associated with category.",
        "tags": [
          "Catalog node assets"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "DETAILS",
            "module": "CATALOG"
          }
        ]
      }
    },
    "/catalogs/nodes/{id}/assets/{assetId}": {
      "delete": {
        "operationId": "disassociateAssetFromCategory",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "assetId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "Disassociate asset from category.",
        "tags": [
          "Catalog node assets"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "DELETE",
            "module": "CATALOG"
          }
        ]
      },
      "post": {
        "operationId": "associateAssetWithCategory",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "assetId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "Associate asset with category.",
        "tags": [
          "Catalog node assets"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "ADD",
            "module": "CATALOG"
          }
        ]
      },
      "put": {
        "operationId": "moveCategoryAsset",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "assetId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "targetPosition",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "Change asset's order.",
        "tags": [
          "Catalog node assets"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "UPDATE",
            "module": "CATALOG"
          }
        ]
      }
    },
    "/catalogs/nodes/{id}/attributes": {
      "get": {
        "operationId": "listAttributesAttachedToGivenNode",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Archive state.",
            "in": "query",
            "name": "archiveState",
            "required": false,
            "schema": {
              "type": "string",
              "default": "active"
            }
          },
          {
            "description": "Context of presented entity.",
            "in": "header",
            "name": "context",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Use fallback for context",
            "in": "header",
            "name": "context-fallback",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListableCategoryAttributeMetadataResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "List only catalog node attributes attached to given node.",
        "tags": [
          "Catalog node attributes"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "LIST",
            "module": "ATTRIBUTES"
          }
        ]
      }
    },
    "/catalogs/nodes/{id}/attributes/{attributeDefinitionId}": {
      "delete": {
        "operationId": "deleteAttributeFromNode",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "attributeDefinitionId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "Delete catalog node attribute from node.",
        "tags": [
          "Catalog node attributes"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "DELETE",
            "module": "ATTRIBUTES"
          }
        ]
      },
      "patch": {
        "operationId": "updateNodeAttributeValue",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "attributeDefinitionId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "forceCla",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCategoryAttributeRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "Update category level attribute and schedule propagation task.",
        "tags": [
          "Catalog node attributes"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "UPDATE",
            "module": "ATTRIBUTES"
          }
        ]
      },
      "post": {
        "operationId": "createCatalogNodeAttribute",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "attributeDefinitionId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "forceCla",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "description": "Context of presented entity.",
            "in": "header",
            "name": "context",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Use fallback for context",
            "in": "header",
            "name": "context-fallback",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CategoryAttributeRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Conflict"
          }
        },
        "summary": "Create catalog node attribute and schedule propagation task.",
        "tags": [
          "Catalog node attributes"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "ADD",
            "module": "ATTRIBUTES"
          }
        ]
      }
    },
    "/catalogs/nodes/{id}/attributes/{attributeDefinitionId}/column": {
      "post": {
        "operationId": "createCatalogNodeAttributeColumn",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "attributeDefinitionId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "forceCla",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CategoryColumnAttributeRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Conflict"
          }
        },
        "summary": "Create catalog node column attribute and schedule propagation task.",
        "tags": [
          "Catalog node attributes"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "ADD",
            "module": "ATTRIBUTES"
          }
        ]
      },
      "put": {
        "operationId": "updateNodeAttributeColumnValue",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "attributeDefinitionId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "forceCla",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCategoryColumnAttributeRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "Update category level column attribute and schedule propagation task.",
        "tags": [
          "Catalog node attributes"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "UPDATE",
            "module": "ATTRIBUTES"
          }
        ]
      }
    },
    "/catalogs/nodes/{id}/attributes/{attributeDefinitionId}/compound": {
      "post": {
        "operationId": "createCatalogNodeAttributeCompound",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "attributeDefinitionId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Context of presented entity.",
            "in": "header",
            "name": "context",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Use fallback for context",
            "in": "header",
            "name": "context-fallback",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Conflict"
          }
        },
        "summary": "Create catalog node compound attribute and schedule propagation task.",
        "tags": [
          "Catalog node attributes"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "ADD",
            "module": "ATTRIBUTES"
          }
        ]
      }
    },
    "/catalogs/nodes/{id}/attributes/{attributeDefinitionId}/dictionary": {
      "post": {
        "operationId": "createCatalogNodeAttributeDictionary",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "attributeDefinitionId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Context of presented entity.",
            "in": "header",
            "name": "context",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Use fallback for context",
            "in": "header",
            "name": "context-fallback",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Conflict"
          }
        },
        "summary": "Create catalog node dictionary attribute and schedule propagation task.",
        "tags": [
          "Catalog node attributes"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "ADD",
            "module": "ATTRIBUTES"
          }
        ]
      }
    },
    "/catalogs/nodes/{id}/attributes/{attributeDefinitionId}/dictionary/values": {
      "post": {
        "operationId": "setDictionaryAttributeValues_1",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "attributeDefinitionId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "forceCla",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "description": "Context of presented entity.",
            "in": "header",
            "name": "context",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Use fallback for context",
            "in": "header",
            "name": "context-fallback",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetCategoryDictionaryAttributeValuesRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "Set values for dictionary attribute and schedule propagation task.",
        "tags": [
          "Catalog node attributes"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "UPDATE",
            "module": "ATTRIBUTES"
          }
        ]
      }
    },
    "/catalogs/nodes/{id}/attributes/{attributeDefinitionId}/matrix": {
      "post": {
        "operationId": "createCatalogNodeAttributeMatrix",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "attributeDefinitionId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "forceCla",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CategoryMatrixAttributeRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Conflict"
          }
        },
        "summary": "Create catalog node matrix attribute and schedule propagation task.",
        "tags": [
          "Catalog node attributes"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "ADD",
            "module": "ATTRIBUTES"
          }
        ]
      },
      "put": {
        "operationId": "updateNodeAttributeMatrixValue",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "attributeDefinitionId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "forceCla",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCategoryMatrixAttributeRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "Update category level matrix attribute and schedule propagation task.",
        "tags": [
          "Catalog node attributes"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "UPDATE",
            "module": "ATTRIBUTES"
          }
        ]
      }
    },
    "/catalogs/nodes/{id}/children": {
      "get": {
        "operationId": "getCatalogNodeChildren",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Archive state.",
            "in": "query",
            "name": "archiveState",
            "required": false,
            "schema": {
              "type": "string",
              "default": "active"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Number of page. default 0",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Size of page. default 1000",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "description": "Context of presented entity.",
            "in": "header",
            "name": "context",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Use fallback for context",
            "in": "header",
            "name": "context-fallback",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListableCategoryBasicResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "List catalog node child nodes.",
        "tags": [
          "Catalog nodes"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "DETAILS",
            "module": "CATALOG"
          }
        ]
      }
    },
    "/catalogs/nodes/{id}/move": {
      "put": {
        "operationId": "moveCatalogNode",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MoveCategoryRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "Move catalog node to new parent.",
        "tags": [
          "Catalog nodes"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "UPDATE",
            "module": "CATALOG"
          }
        ]
      }
    },
    "/catalogs/nodes/{id}/order": {
      "put": {
        "operationId": "updateCatalogNodeOrder",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "targetPosition",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "Change category order.",
        "tags": [
          "Catalog nodes"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "UPDATE",
            "module": "CATALOG"
          }
        ]
      }
    },
    "/catalogs/nodes/{id}/path": {
      "get": {
        "operationId": "getPathToNode",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Archive state.",
            "in": "query",
            "name": "archiveState",
            "required": false,
            "schema": {
              "type": "string",
              "default": "active"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListableString"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "List catalog node path to root.",
        "tags": [
          "Catalog nodes"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "DETAILS",
            "module": "CATALOG"
          }
        ]
      }
    },
    "/catalogs/nodes/{id}/policy": {
      "get": {
        "operationId": "getByCategoryId_3",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Number of page. default 0",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Size of page. default 1000",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListablePolicyDto"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          }
        },
        "tags": [
          "Category policy"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "READ",
            "module": "DETAILED_PERMISSION"
          }
        ]
      },
      "post": {
        "operationId": "addPolicy_5",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PolicyRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Conflict"
          }
        },
        "tags": [
          "Category policy"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "WRITE",
            "module": "DETAILED_PERMISSION"
          }
        ]
      }
    },
    "/catalogs/nodes/{id}/policy/{policyId}/{policyType}": {
      "delete": {
        "operationId": "deletePolicy_4",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "policyId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "policyType",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "READ",
                "WRITE"
              ]
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          }
        },
        "tags": [
          "Category policy"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "WRITE",
            "module": "DETAILED_PERMISSION"
          }
        ]
      }
    },
    "/catalogs/nodes/{id}/products": {
      "get": {
        "operationId": "getCategoryProducts",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Number of page. default 0",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Size of page. default 1000",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "description": "Archive state.",
            "in": "query",
            "name": "archiveState",
            "required": false,
            "schema": {
              "type": "string",
              "default": "active"
            }
          },
          {
            "description": "Context of presented entity.",
            "in": "header",
            "name": "context",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Use fallback for context",
            "in": "header",
            "name": "context-fallback",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListableCategoryProductResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "List catalog node products.",
        "tags": [
          "Catalog nodes"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "DETAILS",
            "module": "CATALOG"
          }
        ]
      },
      "post": {
        "operationId": "addCategoryProducts",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CategoryProductRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "Add product to the catalog node.",
        "tags": [
          "Catalog nodes"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "PRODUCT_ASSOCIATE",
            "module": "CATALOG"
          }
        ]
      }
    },
    "/catalogs/nodes/{id}/products/policy": {
      "get": {
        "operationId": "getByCategoryId",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Number of page. default 0",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Size of page. default 1000",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListablePolicyDto"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "Get category by id.",
        "tags": [
          "Product policy"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "READ",
            "module": "DETAILED_PERMISSION"
          }
        ]
      },
      "post": {
        "operationId": "addPolicy_2",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PolicyRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          }
        },
        "summary": "Add policy.",
        "tags": [
          "Product policy"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "WRITE",
            "module": "DETAILED_PERMISSION"
          }
        ]
      }
    },
    "/catalogs/nodes/{id}/products/policy/{policyId}/{policyType}": {
      "delete": {
        "operationId": "deletePolicy_3",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "policyId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "policyType",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "READ",
                "WRITE"
              ]
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          }
        },
        "summary": "Delete policy.",
        "tags": [
          "Product policy"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "WRITE",
            "module": "DETAILED_PERMISSION"
          }
        ]
      }
    },
    "/catalogs/nodes/{id}/products/{productId}": {
      "delete": {
        "operationId": "deleteCategoryProducts",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "productId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "Remove product from the catalog node.",
        "tags": [
          "Catalog nodes"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "PRODUCT_ASSOCIATE",
            "module": "CATALOG"
          }
        ]
      }
    },
    "/catalogs/{id}": {
      "delete": {
        "operationId": "archive",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "Archive catalog.",
        "tags": [
          "Catalogs"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "DELETE",
            "module": "CATALOG"
          }
        ]
      },
      "put": {
        "operationId": "unarchive",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "Unarchive catalog.",
        "tags": [
          "Catalogs"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "DELETE",
            "module": "CATALOG"
          }
        ]
      }
    },
    "/catalogs/{id}/nodes": {
      "get": {
        "operationId": "getCategoryTree",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Archive state.",
            "in": "query",
            "name": "archiveState",
            "required": false,
            "schema": {
              "type": "string",
              "default": "active"
            }
          },
          {
            "description": "Context of presented entity.",
            "in": "header",
            "name": "context",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Use fallback for context",
            "in": "header",
            "name": "context-fallback",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryWithChildrenResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "List all nodes from catalog.",
        "tags": [
          "Catalogs"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "DETAILS",
            "module": "CATALOG"
          }
        ]
      }
    },
    "/catalogs/{id}/policy": {
      "get": {
        "operationId": "getByCategoryId_2",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Number of page. default 0",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Size of page. default 1000",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListablePolicyDto"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          }
        },
        "tags": [
          "Category policy"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "READ",
            "module": "DETAILED_PERMISSION"
          }
        ]
      },
      "post": {
        "operationId": "addPolicy_4",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PolicyRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Conflict"
          }
        },
        "tags": [
          "Category policy"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "WRITE",
            "module": "DETAILED_PERMISSION"
          }
        ]
      }
    },
    "/catalogs/{id}/policy/{policyId}/{policyType}": {
      "delete": {
        "operationId": "deletePolicy_5",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "policyId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "policyType",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "READ",
                "WRITE"
              ]
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          }
        },
        "tags": [
          "Category policy"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "WRITE",
            "module": "DETAILED_PERMISSION"
          }
        ]
      }
    },
    "/catalogs/{id}/products/policy": {
      "get": {
        "operationId": "getByCategoryId_1",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Number of page. default 0",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Size of page. default 1000",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListablePolicyDto"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "Get category by id.",
        "tags": [
          "Product policy"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "READ",
            "module": "DETAILED_PERMISSION"
          }
        ]
      },
      "post": {
        "operationId": "addPolicy_3",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PolicyRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          }
        },
        "summary": "Add policy.",
        "tags": [
          "Product policy"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "WRITE",
            "module": "DETAILED_PERMISSION"
          }
        ]
      }
    },
    "/catalogs/{id}/products/policy/{policyId}/{policyType}": {
      "delete": {
        "operationId": "deletePolicy_2",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "policyId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "policyType",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "READ",
                "WRITE"
              ]
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          }
        },
        "summary": "Delete policy.",
        "tags": [
          "Product policy"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "WRITE",
            "module": "DETAILED_PERMISSION"
          }
        ]
      }
    },
    "/compoundDefinitions": {
      "get": {
        "operationId": "findAll_1",
        "parameters": [
          {
            "allowEmptyValue": true,
            "description": "Number of page. default 0",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Size of page. default 1000",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "description": "Context of presented entity.",
            "in": "header",
            "name": "context",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Use fallback for context",
            "in": "header",
            "name": "context-fallback",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListableCompoundAttributeDefinitionResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          }
        },
        "summary": "Lists details of compound attribute definition.",
        "tags": [
          "Compound attribute definitions"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "LIST",
            "module": "ATTRIBUTE_DEFINITIONS"
          }
        ]
      },
      "post": {
        "operationId": "create_7",
        "parameters": [
          {
            "in": "query",
            "name": "validation",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "NONE",
                "NAME"
              ]
            }
          },
          {
            "description": "Context of presented entity.",
            "in": "header",
            "name": "context",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Use fallback for context",
            "in": "header",
            "name": "context-fallback",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompoundAttributeDefinitionRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Location": {
                "description": "Location URI",
                "schema": {
                  "type": "string"
                }
              },
              "Resource-Id": {
                "description": "Entity identifier",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Conflict"
          }
        },
        "summary": "Create compound attribute definition.",
        "tags": [
          "Compound attribute definitions"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "ADD",
            "module": "ATTRIBUTE_DEFINITIONS"
          }
        ]
      }
    },
    "/compoundDefinitions/attributeDefinition/{attributeDefinitionId}": {
      "get": {
        "operationId": "findBySubDefinitions",
        "parameters": [
          {
            "in": "path",
            "name": "attributeDefinitionId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Number of page. default 0",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Size of page. default 1000",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "description": "Context of presented entity.",
            "in": "header",
            "name": "context",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Use fallback for context",
            "in": "header",
            "name": "context-fallback",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListableCompoundAttributeDefinitionResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          }
        },
        "summary": "List all compound attributes that use the attribute definition.",
        "tags": [
          "Compound attribute definitions"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "DETAILS",
            "module": "ATTRIBUTE_DEFINITIONS"
          }
        ]
      }
    },
    "/compoundDefinitions/{id}": {
      "delete": {
        "operationId": "delete_5",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "Delete compound attribute definition.",
        "tags": [
          "Compound attribute definitions"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "DELETE",
            "module": "ATTRIBUTE_DEFINITIONS"
          }
        ]
      },
      "get": {
        "operationId": "get_3",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Context of presented entity.",
            "in": "header",
            "name": "context",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Use fallback for context",
            "in": "header",
            "name": "context-fallback",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompoundAttributeDefinitionResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "Show details of compound attribute definition.",
        "tags": [
          "Compound attribute definitions"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "DETAILS",
            "module": "ATTRIBUTE_DEFINITIONS"
          }
        ]
      },
      "put": {
        "operationId": "update_5",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "validation",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "NONE",
                "NAME"
              ]
            }
          },
          {
            "description": "Context of presented entity.",
            "in": "header",
            "name": "context",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Use fallback for context",
            "in": "header",
            "name": "context-fallback",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompoundAttributeDefinitionRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Conflict"
          }
        },
        "summary": "Update compound attribute definition.",
        "tags": [
          "Compound attribute definitions"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "UPDATE",
            "module": "ATTRIBUTE_DEFINITIONS"
          }
        ]
      }
    },
    "/definitions": {
      "get": {
        "operationId": "findAll",
        "parameters": [
          {
            "allowEmptyValue": true,
            "description": "Number of page. default 0",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Size of page. default 1000",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "description": "Context of presented entity.",
            "in": "header",
            "name": "context",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Use fallback for context",
            "in": "header",
            "name": "context-fallback",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListableAttributeDefinitionResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          }
        },
        "summary": "List all attribute definitions.",
        "tags": [
          "Attribute definitions"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "LIST",
            "module": "ATTRIBUTE_DEFINITIONS"
          }
        ]
      },
      "post": {
        "operationId": "create_2",
        "parameters": [
          {
            "in": "query",
            "name": "validation",
            "required": false,
            "schema": {
              "type": "string",
              "default": "NAME",
              "enum": [
                "NONE",
                "NAME"
              ]
            }
          },
          {
            "description": "Context of presented entity.",
            "in": "header",
            "name": "context",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Use fallback for context",
            "in": "header",
            "name": "context-fallback",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SimpleAttributeDefinitionRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Location": {
                "description": "Location URI",
                "schema": {
                  "type": "string"
                }
              },
              "Resource-Id": {
                "description": "Entity identifier",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Conflict"
          }
        },
        "summary": "Create attribute definition.",
        "tags": [
          "Attribute definitions"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "ADD",
            "module": "ATTRIBUTE_DEFINITIONS"
          }
        ]
      }
    },
    "/definitions/column": {
      "post": {
        "operationId": "create_6",
        "parameters": [
          {
            "in": "query",
            "name": "validation",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "NONE",
                "NAME"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ColumnAttributeDefinitionDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Location": {
                "description": "Location URI",
                "schema": {
                  "type": "string"
                }
              },
              "Resource-Id": {
                "description": "Entity identifier",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          }
        },
        "summary": "Create attribute definition.",
        "tags": [
          "Attribute definitions"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "ADD",
            "module": "ATTRIBUTE_DEFINITIONS"
          }
        ]
      }
    },
    "/definitions/column/{id}": {
      "put": {
        "operationId": "update_4",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "validation",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "NONE",
                "NAME"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ColumnAttributeDefinitionDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttributeDefinitionUpdateResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "Update attribute definition.",
        "tags": [
          "Attribute definitions"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "UPDATE",
            "module": "ATTRIBUTE_DEFINITIONS"
          }
        ]
      }
    },
    "/definitions/column/{id}/dryrun": {
      "put": {
        "operationId": "updateDryRun_2",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "validation",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "NONE",
                "NAME"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ColumnAttributeDefinitionDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttributeDefinitionUpdateResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "Show number of elements affected by the attribute definition update operation.",
        "tags": [
          "Attribute definitions"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "UPDATE",
            "module": "ATTRIBUTE_DEFINITIONS"
          }
        ]
      }
    },
    "/definitions/dictionary": {
      "post": {
        "operationId": "create_4",
        "parameters": [
          {
            "in": "query",
            "name": "validation",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "NONE",
                "NAME"
              ]
            }
          },
          {
            "description": "Context of presented entity.",
            "in": "header",
            "name": "context",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DictionaryAttributeDefinitionDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Location": {
                "description": "Location URI",
                "schema": {
                  "type": "string"
                }
              },
              "Resource-Id": {
                "description": "Entity identifier",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Conflict"
          }
        },
        "summary": "Create dictionary attribute definition.",
        "tags": [
          "Attribute definitions"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "ADD",
            "module": "ATTRIBUTE_DEFINITIONS"
          }
        ]
      }
    },
    "/definitions/dictionary/{id}": {
      "delete": {
        "deprecated": true,
        "operationId": "delete_3",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          }
        },
        "summary": "Delete dictionary attribute definition.",
        "tags": [
          "Attribute definitions"
        ],
        "x-bluestone-deprecated-since": "2022.09.13",
        "x-bluestone-permission": [
          {
            "accessType": "DELETE",
            "module": "ATTRIBUTE_DEFINITIONS"
          }
        ]
      },
      "patch": {
        "operationId": "patchUpdate",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DictionaryAttributeDefinitionUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "Update selected items limit for dictionary attribute definition.",
        "tags": [
          "Attribute definitions"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "UPDATE",
            "module": "ATTRIBUTE_DEFINITIONS"
          }
        ]
      },
      "put": {
        "operationId": "update_3",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "validation",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "NONE",
                "NAME"
              ]
            }
          },
          {
            "description": "Context of presented entity.",
            "in": "header",
            "name": "context",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DictionaryAttributeDefinitionDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Conflict"
          }
        },
        "summary": "Update dictionary attribute definition.",
        "tags": [
          "Attribute definitions"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "UPDATE",
            "module": "ATTRIBUTE_DEFINITIONS"
          }
        ]
      }
    },
    "/definitions/dictionary/{id}/filter": {
      "delete": {
        "operationId": "deleteDictionaryParent",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "Delete dictionary parent from dictionary definition.",
        "tags": [
          "Attribute definitions"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "UPDATE",
            "module": "ATTRIBUTE_DEFINITIONS"
          }
        ]
      }
    },
    "/definitions/dictionary/{id}/filter/{parentDefinitionId}": {
      "post": {
        "operationId": "setDictionaryParent",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "parentDefinitionId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "Set dictionary parent for filtering dictionary values.",
        "tags": [
          "Attribute definitions"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "UPDATE",
            "module": "ATTRIBUTE_DEFINITIONS"
          }
        ]
      }
    },
    "/definitions/dictionary/{id}/values": {
      "post": {
        "operationId": "create_5",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Context of presented entity.",
            "in": "header",
            "name": "context",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DictionaryAttributeCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Location": {
                "description": "Location URI",
                "schema": {
                  "type": "string"
                }
              },
              "Resource-Id": {
                "description": "Entity identifier",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Conflict"
          }
        },
        "summary": "Create dictionary attribute.",
        "tags": [
          "Attribute definitions"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "ADD",
            "module": "ATTRIBUTE_DEFINITIONS"
          }
        ]
      }
    },
    "/definitions/dictionary/{id}/values/count": {
      "post": {
        "operationId": "countDictionaryAttributes",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Context of presented entity.",
            "in": "header",
            "name": "context",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DictionaryAttributeFilteringRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CountableLong"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "Count dictionary attributes for given dictionary definition.",
        "tags": [
          "Attribute definitions"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "DETAILS",
            "module": "ATTRIBUTE_DEFINITIONS"
          }
        ]
      }
    },
    "/definitions/dictionary/{id}/values/filter/list": {
      "post": {
        "operationId": "findFiltered_2",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Context of presented entity.",
            "in": "header",
            "name": "context",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Use fallback for context",
            "in": "header",
            "name": "context-fallback",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DictionaryValueFilteringRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListableDictionaryValueFilterResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          }
        },
        "summary": "List filtered dictionary attributes.",
        "tags": [
          "Attribute definitions"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "LIST",
            "module": "ATTRIBUTE_DEFINITIONS"
          }
        ]
      }
    },
    "/definitions/dictionary/{id}/values/list": {
      "post": {
        "operationId": "findFiltered_1",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Context of presented entity.",
            "in": "header",
            "name": "context",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Use fallback for context",
            "in": "header",
            "name": "context-fallback",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DictionaryAttributeFilteringRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListableDictionaryAttributeResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          }
        },
        "summary": "List filtered dictionary attributes with given definition id.",
        "tags": [
          "Attribute definitions"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "LIST",
            "module": "ATTRIBUTE_DEFINITIONS"
          }
        ]
      }
    },
    "/definitions/dictionary/{id}/values/{valueId}": {
      "delete": {
        "operationId": "delete_4",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "valueId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "Delete dictionary attribute.",
        "tags": [
          "Attribute definitions"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "DELETE",
            "module": "ATTRIBUTE_DEFINITIONS"
          }
        ]
      },
      "get": {
        "operationId": "get_2",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "valueId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Context of presented entity.",
            "in": "header",
            "name": "context",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Use fallback for context",
            "in": "header",
            "name": "context-fallback",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DictionaryAttributeResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "Show details of dictionary attribute.",
        "tags": [
          "Attribute definitions"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "DETAILS",
            "module": "ATTRIBUTE_DEFINITIONS"
          }
        ]
      },
      "patch": {
        "operationId": "update_6",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "valueId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Context of presented entity.",
            "in": "header",
            "name": "context",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DictionaryAttributeUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Conflict"
          }
        },
        "summary": "Update dictionary attribute.",
        "tags": [
          "Attribute definitions"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "UPDATE",
            "module": "ATTRIBUTE_DEFINITIONS"
          }
        ]
      }
    },
    "/definitions/dictionary/{id}/values/{valueId}/filter/{parentValueId}": {
      "delete": {
        "operationId": "deleteDictionaryFilter",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "valueId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "parentValueId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "Delete dictionary value filter.",
        "tags": [
          "Attribute definitions"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "UPDATE",
            "module": "ATTRIBUTE_DEFINITIONS"
          }
        ]
      },
      "post": {
        "operationId": "createDictionaryValueFilter",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "valueId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "parentValueId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Conflict"
          }
        },
        "summary": "Create dictionary value filter.",
        "tags": [
          "Attribute definitions"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "UPDATE",
            "module": "ATTRIBUTE_DEFINITIONS"
          }
        ]
      }
    },
    "/definitions/list": {
      "post": {
        "operationId": "findFiltered",
        "parameters": [
          {
            "description": "Context of presented entity.",
            "in": "header",
            "name": "context",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Use fallback for context",
            "in": "header",
            "name": "context-fallback",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AttributeDefinitionFilteringRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListableAttributeDefinitionResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          }
        },
        "summary": "List filtered attribute definitions.",
        "tags": [
          "Attribute definitions"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "LIST",
            "module": "ATTRIBUTE_DEFINITIONS"
          }
        ]
      }
    },
    "/definitions/matrix": {
      "post": {
        "operationId": "create_3",
        "parameters": [
          {
            "in": "query",
            "name": "validation",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "NONE",
                "NAME"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MatrixAttributeDefinitionDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Location": {
                "description": "Location URI",
                "schema": {
                  "type": "string"
                }
              },
              "Resource-Id": {
                "description": "Entity identifier",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Conflict"
          }
        },
        "summary": "Create attribute definition.",
        "tags": [
          "Attribute definitions"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "ADD",
            "module": "ATTRIBUTE_DEFINITIONS"
          }
        ]
      }
    },
    "/definitions/matrix/{id}": {
      "put": {
        "operationId": "update_2",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "validation",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "NONE",
                "NAME"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MatrixAttributeDefinitionDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttributeDefinitionUpdateResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "Update attribute definition.",
        "tags": [
          "Attribute definitions"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "UPDATE",
            "module": "ATTRIBUTE_DEFINITIONS"
          }
        ]
      }
    },
    "/definitions/matrix/{id}/dryrun": {
      "put": {
        "operationId": "updateDryRun_1",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "validation",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "NONE",
                "NAME"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MatrixAttributeDefinitionDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttributeDefinitionUpdateResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "Show number of elements affected by the attribute definition update operation.",
        "tags": [
          "Attribute definitions"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "UPDATE",
            "module": "ATTRIBUTE_DEFINITIONS"
          }
        ]
      }
    },
    "/definitions/simple": {
      "get": {
        "operationId": "findSimple",
        "parameters": [
          {
            "allowEmptyValue": true,
            "description": "Number of page. default 0",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Size of page. default 1000",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "description": "Context of presented entity.",
            "in": "header",
            "name": "context",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Use fallback for context",
            "in": "header",
            "name": "context-fallback",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListableAttributeDefinitionResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          }
        },
        "summary": "List simple attribute definitions.",
        "tags": [
          "Attribute definitions"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "LIST",
            "module": "ATTRIBUTE_DEFINITIONS"
          }
        ]
      }
    },
    "/definitions/{id}": {
      "delete": {
        "operationId": "delete_2",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "Delete attribute definition.",
        "tags": [
          "Attribute definitions"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "DELETE",
            "module": "ATTRIBUTE_DEFINITIONS"
          }
        ]
      },
      "get": {
        "operationId": "get_1",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Context of presented entity.",
            "in": "header",
            "name": "context",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Use fallback for context",
            "in": "header",
            "name": "context-fallback",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttributeDefinitionResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "Show details of attribute definition.",
        "tags": [
          "Attribute definitions"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "DETAILS",
            "module": "ATTRIBUTE_DEFINITIONS"
          }
        ]
      },
      "patch": {
        "operationId": "updateMetadata",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "validation",
            "required": false,
            "schema": {
              "type": "string",
              "default": "NAME",
              "enum": [
                "NONE",
                "NAME"
              ]
            }
          },
          {
            "description": "Context of presented entity.",
            "in": "header",
            "name": "context",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Use fallback for context",
            "in": "header",
            "name": "context-fallback",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AttributeDefinitionMetadataUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Conflict"
          }
        },
        "summary": "Update attribute definition.",
        "tags": [
          "Attribute definitions"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "UPDATE",
            "module": "ATTRIBUTE_DEFINITIONS"
          }
        ]
      },
      "put": {
        "operationId": "update_1",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "validation",
            "required": false,
            "schema": {
              "type": "string",
              "default": "NAME",
              "enum": [
                "NONE",
                "NAME"
              ]
            }
          },
          {
            "description": "Context of presented entity.",
            "in": "header",
            "name": "context",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Use fallback for context",
            "in": "header",
            "name": "context-fallback",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SimpleAttributeDefinitionRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttributeDefinitionUpdateResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Conflict"
          }
        },
        "summary": "Update attribute definition.",
        "tags": [
          "Attribute definitions"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "UPDATE",
            "module": "ATTRIBUTE_DEFINITIONS"
          }
        ]
      }
    },
    "/definitions/{id}/dryrun": {
      "delete": {
        "operationId": "deleteDryRun",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttributeDefinitionDeleteResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "Show number of elements affected by the attribute definition delete operation.",
        "tags": [
          "Attribute definitions"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "DELETE",
            "module": "ATTRIBUTE_DEFINITIONS"
          }
        ]
      },
      "put": {
        "operationId": "updateDryRun",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "validation",
            "required": false,
            "schema": {
              "type": "string",
              "default": "NAME",
              "enum": [
                "NONE",
                "NAME"
              ]
            }
          },
          {
            "description": "Context of presented entity.",
            "in": "header",
            "name": "context",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Use fallback for context",
            "in": "header",
            "name": "context-fallback",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SimpleAttributeDefinitionRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttributeDefinitionUpdateResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Conflict"
          }
        },
        "summary": "Show number of elements affected by the attribute definition update operation.",
        "tags": [
          "Attribute definitions"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "UPDATE",
            "module": "ATTRIBUTE_DEFINITIONS"
          }
        ]
      }
    },
    "/definitions/{id}/policy": {
      "get": {
        "operationId": "getByDefinitionId",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Number of page. default 0",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Size of page. default 1000",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListablePolicyDto"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "Get policies by attribute definition id.",
        "tags": [
          "Attribute definition policies"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "READ",
            "module": "DETAILED_PERMISSION"
          }
        ]
      },
      "post": {
        "operationId": "addPolicy_1",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PolicyRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "Add policy to attribute definition.",
        "tags": [
          "Attribute definition policies"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "WRITE",
            "module": "DETAILED_PERMISSION"
          }
        ]
      }
    },
    "/definitions/{id}/policy/{policyId}/{policyType}": {
      "delete": {
        "operationId": "deletePolicy_1",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "policyId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "policyType",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "READ",
                "WRITE"
              ]
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "Delete policy for attribute definition.",
        "tags": [
          "Attribute definition policies"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "WRITE",
            "module": "DETAILED_PERMISSION"
          }
        ]
      }
    },
    "/definitions/{id}/products": {
      "get": {
        "operationId": "findProducts",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Number of page. default 0",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Size of page. default 1000",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "description": "Archive state.",
            "in": "query",
            "name": "archiveState",
            "required": false,
            "schema": {
              "type": "string",
              "default": "active"
            }
          },
          {
            "description": "Context of presented entity.",
            "in": "header",
            "name": "context",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Use fallback for context",
            "in": "header",
            "name": "context-fallback",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListableProductWithAttributeValuesResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "List all products that use the simple attribute definition.",
        "tags": [
          "Attribute definitions"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "LIST",
            "module": "ATTRIBUTE_DEFINITIONS"
          }
        ]
      }
    },
    "/organization/syncPapiSync": {
      "post": {
        "deprecated": true,
        "operationId": "createJobToSyncStatusesWithPapiSync",
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          }
        },
        "tags": [
          "organization-product-state-sync"
        ],
        "x-bluestone-internal": true,
        "x-bluestone-system-role": {
          "role": [
            "SYNC_ADMIN"
          ],
          "s2sAllowed": false
        }
      }
    },
    "/policy/{id}/catalogs": {
      "get": {
        "operationId": "getByPolicyId_5",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Number of page. default 0",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Size of page. default 1000",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "description": "Context of presented entity.",
            "in": "header",
            "name": "context",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Use fallback for context",
            "in": "header",
            "name": "context-fallback",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListableCategoryFullResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          }
        },
        "tags": [
          "Category policy"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "READ",
            "module": "DETAILED_PERMISSION"
          }
        ]
      }
    },
    "/policy/{id}/catalogs/nodes": {
      "get": {
        "operationId": "getByPolicyId_4",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Number of page. default 0",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Size of page. default 1000",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "description": "Context of presented entity.",
            "in": "header",
            "name": "context",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Use fallback for context",
            "in": "header",
            "name": "context-fallback",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListableCategoryFullResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          }
        },
        "tags": [
          "Category policy"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "READ",
            "module": "DETAILED_PERMISSION"
          }
        ]
      }
    },
    "/policy/{id}/catalogs/nodes/products": {
      "get": {
        "operationId": "getByPolicyId_2",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Number of page. default 0",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Size of page. default 1000",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "description": "Context of presented entity.",
            "in": "header",
            "name": "context",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Use fallback for context",
            "in": "header",
            "name": "context-fallback",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListableCategoryFullResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "Get policy by id.",
        "tags": [
          "Product policy"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "READ",
            "module": "DETAILED_PERMISSION"
          }
        ]
      }
    },
    "/policy/{id}/catalogs/products": {
      "get": {
        "operationId": "getByPolicyId_3",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Number of page. default 0",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Size of page. default 1000",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "description": "Context of presented entity.",
            "in": "header",
            "name": "context",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Use fallback for context",
            "in": "header",
            "name": "context-fallback",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListableCategoryFullResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "Get policy by id.",
        "tags": [
          "Product policy"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "READ",
            "module": "DETAILED_PERMISSION"
          }
        ]
      }
    },
    "/policy/{id}/definitions": {
      "get": {
        "operationId": "getByPolicyId_1",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Number of page. default 0",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Size of page. default 1000",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "description": "Context of presented entity.",
            "in": "header",
            "name": "context",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Use fallback for context",
            "in": "header",
            "name": "context-fallback",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListableAttributeDefinitionResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "Get attribute definitions by policy id.",
        "tags": [
          "Attribute definition policies"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "READ",
            "module": "DETAILED_PERMISSION"
          }
        ]
      }
    },
    "/policy/{id}/relations": {
      "get": {
        "operationId": "getByPolicyId",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Number of page. default 0",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Size of page. default 1000",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "description": "Context of presented entity.",
            "in": "header",
            "name": "context",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Use fallback for context",
            "in": "header",
            "name": "context-fallback",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListableRelationResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "Get relation by policy id.",
        "tags": [
          "Relation policy"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "READ",
            "module": "DETAILED_PERMISSION"
          }
        ]
      }
    },
    "/products": {
      "get": {
        "deprecated": true,
        "operationId": "getProducts",
        "parameters": [
          {
            "allowEmptyValue": true,
            "description": "Number of page. default 0",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Size of page. default 1000",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "description": "Publish state",
            "in": "query",
            "name": "publishState",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "description": "Products updated after given date.",
            "in": "query",
            "name": "updatedAfter",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "Data synced.",
            "in": "query",
            "name": "dataSynced",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Context of presented entity.",
            "in": "header",
            "name": "context",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Use fallback for context",
            "in": "header",
            "name": "context-fallback",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/full+json": {
                "schema": {
                  "$ref": "#/components/schemas/ListableProductAll"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListableProductAll"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          }
        },
        "summary": "Show details of product.",
        "tags": [
          "Products"
        ],
        "x-bluestone-deprecated-since": "2022.08.12",
        "x-bluestone-permission": [
          {
            "accessType": "LIST",
            "module": "PRODUCTS"
          }
        ]
      },
      "post": {
        "operationId": "createProduct",
        "parameters": [
          {
            "in": "query",
            "name": "validation",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "NAME",
                "NUMBER"
              ]
            }
          },
          {
            "description": "Context of presented entity.",
            "in": "header",
            "name": "context",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Location": {
                "description": "Location URI",
                "schema": {
                  "type": "string"
                }
              },
              "Resource-Id": {
                "description": "Entity identifier",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Conflict"
          }
        },
        "summary": "Create new product.",
        "tags": [
          "Products"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "ADD",
            "module": "PRODUCTS"
          }
        ]
      }
    },
    "/products/archive/by-ids": {
      "put": {
        "operationId": "archiveProductsByIds",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductArchiveStateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          }
        },
        "summary": "Archive products by ids.",
        "tags": [
          "Products"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "ARCHIVE",
            "module": "PRODUCTS"
          }
        ]
      }
    },
    "/products/attributes": {
      "delete": {
        "operationId": "deleteProductsAttribute",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteProductsAttributesBulkRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          }
        },
        "summary": "Delete products attributes.",
        "tags": [
          "Bulk"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "DELETE",
            "module": "ATTRIBUTES"
          }
        ]
      },
      "post": {
        "deprecated": true,
        "operationId": "createOrUpdate",
        "parameters": [
          {
            "description": "Context of presented entity.",
            "in": "header",
            "name": "context",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Use fallback for context",
            "in": "header",
            "name": "context-fallback",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveProductsAttributesBulkRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          }
        },
        "summary": "Save products attributes.",
        "tags": [
          "Bulk"
        ],
        "x-bluestone-deprecated-since": "2022.06.13",
        "x-bluestone-permission": [
          {
            "accessType": "UPDATE",
            "module": "ATTRIBUTES"
          }
        ]
      }
    },
    "/products/attributes/add/by-ids": {
      "post": {
        "operationId": "addAttributesByIds",
        "parameters": [
          {
            "in": "query",
            "name": "failOnAssignedAttribute",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true
            }
          },
          {
            "in": "query",
            "name": "forceVla",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "description": "Context of presented entity.",
            "in": "header",
            "name": "context",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Use fallback for context",
            "in": "header",
            "name": "context-fallback",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveProductsAttributesByIdsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          }
        },
        "summary": "Add attribute values in given set of products.",
        "tags": [
          "Products attributes"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "ADD",
            "module": "ATTRIBUTES"
          }
        ]
      }
    },
    "/products/attributes/by-ids": {
      "post": {
        "operationId": "upsertAttributesByIds",
        "parameters": [
          {
            "in": "query",
            "name": "forceVla",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "description": "Context of presented entity.",
            "in": "header",
            "name": "context",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Use fallback for context",
            "in": "header",
            "name": "context-fallback",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveProductsAttributesByIdsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          }
        },
        "summary": "Upsert attribute values in given set of products.",
        "tags": [
          "Products attributes"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "UPDATE",
            "module": "ATTRIBUTES"
          },
          {
            "accessType": "ADD",
            "module": "ATTRIBUTES"
          }
        ]
      },
      "put": {
        "operationId": "updateAttributesByIds",
        "parameters": [
          {
            "in": "query",
            "name": "forceVla",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "description": "A flag that determine, whether the request will fail if an attribute is missing from the product.",
            "in": "query",
            "name": "failOnMissingAttribute",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true
            }
          },
          {
            "description": "Context of presented entity.",
            "in": "header",
            "name": "context",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Use fallback for context",
            "in": "header",
            "name": "context-fallback",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveProductsAttributesByIdsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          }
        },
        "summary": "Update attribute values in given set of products.",
        "tags": [
          "Products attributes"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "UPDATE",
            "module": "ATTRIBUTES"
          }
        ]
      }
    },
    "/products/categories/by-ids": {
      "post": {
        "operationId": "assignProductsToCategory",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignProductsToCategoryRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "Adds products as a children of category.",
        "tags": [
          "Products categories"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "PRODUCT_ASSOCIATE",
            "module": "CATALOG"
          }
        ]
      }
    },
    "/products/copy": {
      "post": {
        "operationId": "copyAndUpdateProduct",
        "parameters": [
          {
            "description": "Context of presented entity.",
            "in": "header",
            "name": "context",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CopyProductRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          }
        },
        "summary": "Create a copy of product.",
        "tags": [
          "Products"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "COPY",
            "module": "PRODUCTS"
          }
        ]
      }
    },
    "/products/count": {
      "post": {
        "deprecated": true,
        "description": "Disabled request filters: assetFilters, scoreFilter, scoreRequirementResultFilters.",
        "operationId": "countFilteredProducts",
        "parameters": [
          {
            "description": "Archive state.",
            "in": "query",
            "name": "archiveState",
            "required": false,
            "schema": {
              "type": "string",
              "default": "active"
            }
          },
          {
            "description": "Context of presented entity.",
            "in": "header",
            "name": "context",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GridFilteringBaseRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CountableLong"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          }
        },
        "summary": "Count filtered products.",
        "tags": [
          "Products"
        ],
        "x-bluestone-deprecated-since": "2021.11.25",
        "x-bluestone-internal": true,
        "x-bluestone-permission": [
          {
            "accessType": "DETAILS",
            "module": "PRODUCTS"
          }
        ]
      }
    },
    "/products/cursor": {
      "post": {
        "deprecated": true,
        "description": "Disabled request filters: assetFilters, scoreFilter, scoreRequirementResultFilters.",
        "operationId": "scanProductsWithCursor",
        "parameters": [
          {
            "description": "Archive state.",
            "in": "query",
            "name": "archiveState",
            "required": false,
            "schema": {
              "type": "string",
              "default": "active"
            }
          },
          {
            "description": "Context of presented entity.",
            "in": "header",
            "name": "context",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Use fallback for context",
            "in": "header",
            "name": "context-fallback",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CursorFilteringRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListableWithCursorProductAll"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          }
        },
        "summary": "Scan (filtered) products using cursor. Use Post /core-search/products/scroll/search.",
        "tags": [
          "Products"
        ],
        "x-bluestone-api-gateway-hidden": true,
        "x-bluestone-deprecated-since": "2021.11.25",
        "x-bluestone-internal": true,
        "x-bluestone-permission": [
          {
            "accessType": "DETAILS",
            "module": "PRODUCTS"
          }
        ]
      }
    },
    "/products/cursor/views": {
      "post": {
        "deprecated": true,
        "description": "Disabled request filters: assetFilters, scoreFilter, scoreRequirementResultFilters.",
        "operationId": "scanProductsWithCursorViews",
        "parameters": [
          {
            "description": "Archive state.",
            "in": "query",
            "name": "archiveState",
            "required": false,
            "schema": {
              "type": "string",
              "default": "active"
            }
          },
          {
            "description": "Context of presented entity.",
            "in": "header",
            "name": "context",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Use fallback for context",
            "in": "header",
            "name": "context-fallback",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CursorFilteringWithViewsRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListableWithCursorProductViewDto"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          }
        },
        "summary": "Scan (filtered) products with views using cursor.",
        "tags": [
          "Products"
        ],
        "x-bluestone-api-gateway-hidden": true,
        "x-bluestone-deprecated-since": "2021.11.25",
        "x-bluestone-internal": true,
        "x-bluestone-permission": [
          {
            "accessType": "DETAILS",
            "module": "PRODUCTS"
          }
        ]
      }
    },
    "/products/cursor/views/all": {
      "post": {
        "operationId": "getProductsWithCursorAndViews",
        "parameters": [
          {
            "description": "Archive state.",
            "in": "query",
            "name": "archiveState",
            "required": false,
            "schema": {
              "type": "string",
              "default": "active"
            }
          },
          {
            "description": "Context of presented entity.",
            "in": "header",
            "name": "context",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Use fallback for context",
            "in": "header",
            "name": "context-fallback",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CursorWithViewsRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListableWithCursorProductViewDto"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          }
        },
        "summary": "Get products with views using cursor.",
        "tags": [
          "Products"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "DETAILS",
            "module": "PRODUCTS"
          }
        ]
      }
    },
    "/products/labels/by-ids": {
      "delete": {
        "operationId": "removeLabelFromProducts",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModifyLabelInProductsRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          }
        },
        "summary": "Remove label from the set of products.",
        "tags": [
          "Products labels"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "DELETE",
            "module": "PRODUCTS"
          }
        ]
      },
      "post": {
        "operationId": "addLabelToProducts",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModifyLabelInProductsRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "Add label to the set of products.",
        "tags": [
          "Products labels"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "UPDATE",
            "module": "PRODUCTS"
          }
        ]
      }
    },
    "/products/list": {
      "post": {
        "deprecated": true,
        "description": "Disabled request filters: assetFilters, scoreFilter, scoreRequirementResultFilters.",
        "operationId": "getFilteredProduct",
        "parameters": [
          {
            "description": "Archive state.",
            "in": "query",
            "name": "archiveState",
            "required": false,
            "schema": {
              "type": "string",
              "default": "active"
            }
          },
          {
            "description": "Context of presented entity.",
            "in": "header",
            "name": "context",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Use fallback for context",
            "in": "header",
            "name": "context-fallback",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GridFilteringRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListableProductAll"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          }
        },
        "summary": "Show list of filtered products with all details. Use Post /core-search/products/search.",
        "tags": [
          "Products"
        ],
        "x-bluestone-api-gateway-hidden": true,
        "x-bluestone-deprecated-since": "2021.11.25",
        "x-bluestone-internal": true,
        "x-bluestone-permission": [
          {
            "accessType": "DETAILS",
            "module": "PRODUCTS"
          }
        ]
      }
    },
    "/products/list/views": {
      "post": {
        "deprecated": true,
        "description": "Disabled request filters: assetFilters, scoreFilter, scoreRequirementResultFilters.",
        "operationId": "getFilteredProductWithViews",
        "parameters": [
          {
            "description": "Archive state.",
            "in": "query",
            "name": "archiveState",
            "required": false,
            "schema": {
              "type": "string",
              "default": "active"
            }
          },
          {
            "description": "Context of presented entity.",
            "in": "header",
            "name": "context",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Use fallback for context",
            "in": "header",
            "name": "context-fallback",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ListFilteringWithViewsRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListableProductViewDto"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          }
        },
        "summary": "Show list of filtered products with views.",
        "tags": [
          "Products"
        ],
        "x-bluestone-api-gateway-hidden": true,
        "x-bluestone-deprecated-since": "2021.11.25",
        "x-bluestone-internal": true,
        "x-bluestone-permission": [
          {
            "accessType": "DETAILS",
            "module": "PRODUCTS"
          }
        ]
      }
    },
    "/products/list/views/by-assets": {
      "post": {
        "operationId": "listProductsViewsByAssets",
        "parameters": [
          {
            "description": "Archive state.",
            "in": "query",
            "name": "archiveState",
            "required": false,
            "schema": {
              "type": "string",
              "default": "active"
            }
          },
          {
            "description": "Context of presented entity.",
            "in": "header",
            "name": "context",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Use fallback for context",
            "in": "header",
            "name": "context-fallback",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssetIdListViewsRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListableProductViewDto"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          }
        },
        "summary": "Show list of products filtered by asset ids with details from given views.",
        "tags": [
          "Products"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "DETAILS",
            "module": "PRODUCTS"
          }
        ]
      }
    },
    "/products/list/views/by-ids": {
      "post": {
        "operationId": "listProductsViewsByIds",
        "parameters": [
          {
            "description": "Archive state.",
            "in": "query",
            "name": "archiveState",
            "required": false,
            "schema": {
              "type": "string",
              "default": "active"
            }
          },
          {
            "description": "Context of presented entity.",
            "in": "header",
            "name": "context",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Use fallback for context",
            "in": "header",
            "name": "context-fallback",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductIdListViewsRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListableProductViewDto"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          }
        },
        "summary": "Show list of products filtered by ids with details from given views.",
        "tags": [
          "Products"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "DETAILS",
            "module": "PRODUCTS"
          }
        ]
      }
    },
    "/products/list/views/by-numbers": {
      "post": {
        "operationId": "listProductsViewsByNumbers",
        "parameters": [
          {
            "description": "Archive state.",
            "in": "query",
            "name": "archiveState",
            "required": false,
            "schema": {
              "type": "string",
              "default": "active"
            }
          },
          {
            "description": "Context of presented entity.",
            "in": "header",
            "name": "context",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Use fallback for context",
            "in": "header",
            "name": "context-fallback",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductNumberListViewsRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListableProductViewDto"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          }
        },
        "summary": "Show list of products views filtered by numbers.",
        "tags": [
          "Products"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "DETAILS",
            "module": "PRODUCTS"
          }
        ]
      }
    },
    "/products/search": {
      "get": {
        "deprecated": true,
        "operationId": "findProductsByNameOrNumber",
        "parameters": [
          {
            "in": "query",
            "name": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Number of page. default 0",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Size of page. default 1000",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "description": "Archive state.",
            "in": "query",
            "name": "archiveState",
            "required": false,
            "schema": {
              "type": "string",
              "default": "active"
            }
          },
          {
            "description": "Context of presented entity.",
            "in": "header",
            "name": "context",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Use fallback for context",
            "in": "header",
            "name": "context-fallback",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/full+json": {
                "schema": {
                  "$ref": "#/components/schemas/ListableProductAll"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListableProductAll"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          }
        },
        "summary": "Lookup products with given name or number. Use POST /core-search/products/search.",
        "tags": [
          "Products"
        ],
        "x-bluestone-api-gateway-hidden": true,
        "x-bluestone-deprecated-since": "2021.04.07",
        "x-bluestone-permission": [
          {
            "accessType": "DETAILS",
            "module": "PRODUCTS"
          }
        ]
      }
    },
    "/products/search/count": {
      "get": {
        "deprecated": true,
        "operationId": "countProductsByNameOrNumber",
        "parameters": [
          {
            "in": "query",
            "name": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Archive state.",
            "in": "query",
            "name": "archiveState",
            "required": false,
            "schema": {
              "type": "string",
              "default": "active"
            }
          },
          {
            "description": "Context of presented entity.",
            "in": "header",
            "name": "context",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CountableLong"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          }
        },
        "summary": "Total number of searched products. Use POST /core-search/products/count.",
        "tags": [
          "Products"
        ],
        "x-bluestone-api-gateway-hidden": true,
        "x-bluestone-deprecated-since": "2021.04.07",
        "x-bluestone-permission": [
          {
            "accessType": "DETAILS",
            "module": "PRODUCTS"
          }
        ]
      }
    },
    "/products/search/{query}": {
      "get": {
        "deprecated": true,
        "operationId": "findProductsByNameOrNumberDeprecated",
        "parameters": [
          {
            "in": "path",
            "name": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Number of page. default 0",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Size of page. default 1000",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "description": "Archive state.",
            "in": "query",
            "name": "archiveState",
            "required": false,
            "schema": {
              "type": "string",
              "default": "active"
            }
          },
          {
            "description": "Context of presented entity.",
            "in": "header",
            "name": "context",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Use fallback for context",
            "in": "header",
            "name": "context-fallback",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/full+json": {
                "schema": {
                  "$ref": "#/components/schemas/ListableProductAll"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListableProductAll"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          }
        },
        "summary": "Lookup products with given name or number. Use POST /core-search/products/search.",
        "tags": [
          "Products"
        ],
        "x-bluestone-api-gateway-hidden": true,
        "x-bluestone-deprecated-since": "2020.02.11",
        "x-bluestone-permission": [
          {
            "accessType": "DETAILS",
            "module": "PRODUCTS"
          }
        ]
      }
    },
    "/products/states/by-ids": {
      "post": {
        "operationId": "changeStatusesByIds",
        "parameters": [
          {
            "description": "Context of presented entity.",
            "in": "header",
            "name": "context",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProductStateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateProductStateResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          }
        },
        "summary": "Change products state by ids.",
        "tags": [
          "Products"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "UPDATE",
            "module": "PRODUCTS"
          }
        ]
      }
    },
    "/products/templates": {
      "get": {
        "operationId": "find_1",
        "parameters": [
          {
            "allowEmptyValue": true,
            "description": "Number of page. default 0",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Size of page. default 1000",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListableProductTemplateResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          }
        },
        "summary": "List all product templates.",
        "tags": [
          "Products templates"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "DETAILS",
            "module": "PRODUCTS"
          }
        ]
      }
    },
    "/products/templates/{productId}": {
      "delete": {
        "operationId": "delete_1",
        "parameters": [
          {
            "in": "path",
            "name": "productId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "Delete product template.",
        "tags": [
          "Products templates"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "UPDATE",
            "module": "PRODUCTS"
          }
        ]
      },
      "get": {
        "operationId": "get",
        "parameters": [
          {
            "in": "path",
            "name": "productId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductTemplateResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "Show details of product template.",
        "tags": [
          "Products templates"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "DETAILS",
            "module": "PRODUCTS"
          }
        ]
      },
      "post": {
        "operationId": "create_1",
        "parameters": [
          {
            "in": "path",
            "name": "productId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductTemplateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Location": {
                "description": "Location URI",
                "schema": {
                  "type": "string"
                }
              },
              "Resource-Id": {
                "description": "Entity identifier",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Conflict"
          }
        },
        "summary": "Create product template.",
        "tags": [
          "Products templates"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "UPDATE",
            "module": "PRODUCTS"
          }
        ]
      },
      "put": {
        "operationId": "updateName",
        "parameters": [
          {
            "in": "path",
            "name": "productId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductTemplateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Conflict"
          }
        },
        "summary": "Update product template.",
        "tags": [
          "Products templates"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "UPDATE",
            "module": "PRODUCTS"
          }
        ]
      }
    },
    "/products/unarchive/by-ids": {
      "put": {
        "operationId": "unarchiveProductsByIds",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductArchiveStateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          }
        },
        "summary": "Unarchive products by ids.",
        "tags": [
          "Products"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "ARCHIVE",
            "module": "PRODUCTS"
          }
        ]
      }
    },
    "/products/{id}": {
      "get": {
        "operationId": "getProduct",
        "parameters": [
          {
            "description": "Product Id.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Archive state.",
            "in": "query",
            "name": "archiveState",
            "required": false,
            "schema": {
              "type": "string",
              "default": "active"
            }
          },
          {
            "description": "Context of presented entity.",
            "in": "header",
            "name": "context",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Use fallback for context",
            "in": "header",
            "name": "context-fallback",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/full+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductAll"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductAll"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "Show product details.",
        "tags": [
          "Products"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "DETAILS",
            "module": "PRODUCTS"
          }
        ]
      },
      "patch": {
        "operationId": "updateProduct_1",
        "parameters": [
          {
            "description": "Product Id.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Context of presented entity.",
            "in": "header",
            "name": "context",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductMetadataUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Conflict"
          }
        },
        "summary": "Update product details, supports partial update.",
        "tags": [
          "Products"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "UPDATE",
            "module": "PRODUCTS"
          }
        ]
      },
      "put": {
        "deprecated": true,
        "operationId": "updateProduct",
        "parameters": [
          {
            "description": "Product Id.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Context of presented entity.",
            "in": "header",
            "name": "context",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AllProductMetadataUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Conflict"
          }
        },
        "summary": "Update product details.",
        "tags": [
          "Products"
        ],
        "x-bluestone-deprecated-since": "2022.08.12",
        "x-bluestone-permission": [
          {
            "accessType": "UPDATE",
            "module": "PRODUCTS"
          }
        ]
      }
    },
    "/products/{id}/assets": {
      "get": {
        "operationId": "getProductAssets",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Archive state.",
            "in": "query",
            "name": "archiveState",
            "required": false,
            "schema": {
              "type": "string",
              "default": "active"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Number of page. default 0",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Size of page. default 1000",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListableString"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "List assets associated with product.",
        "tags": [
          "Products assets"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "DETAILS",
            "module": "PRODUCTS"
          }
        ]
      },
      "post": {
        "operationId": "associateAssets",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssociateProductAssetsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "Associate assets to product.",
        "tags": [
          "Products assets"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "UPDATE",
            "module": "PRODUCTS"
          }
        ]
      },
      "put": {
        "operationId": "setProductAssets",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetProductAssets"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "Set assets for product.",
        "tags": [
          "Products assets"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "UPDATE",
            "module": "PRODUCTS"
          }
        ]
      }
    },
    "/products/{id}/assets/{assetId}": {
      "delete": {
        "operationId": "disassociateAssetFromProduct",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "assetId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "Disassociate asset from product.",
        "tags": [
          "Products assets"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "DELETE",
            "module": "PRODUCTS"
          }
        ]
      },
      "post": {
        "operationId": "associateAssetWithProduct",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "assetId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "Associate asset with product.",
        "tags": [
          "Products assets"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "ADD",
            "module": "PRODUCTS"
          }
        ]
      },
      "put": {
        "operationId": "moveProductAsset",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "assetId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "targetPosition",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "Change asset's order.",
        "tags": [
          "Products assets"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "UPDATE",
            "module": "PRODUCTS"
          }
        ]
      }
    },
    "/products/{id}/attributes": {
      "get": {
        "operationId": "getProductAttributes",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Archive state.",
            "in": "query",
            "name": "archiveState",
            "required": false,
            "schema": {
              "type": "string",
              "default": "active"
            }
          },
          {
            "description": "Context of presented entity.",
            "in": "header",
            "name": "context",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Use fallback for context",
            "in": "header",
            "name": "context-fallback",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListableAttributeValueAll"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "Get product attributes.",
        "tags": [
          "Products attributes"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "LIST",
            "module": "ATTRIBUTES"
          }
        ]
      },
      "post": {
        "operationId": "addProductAttribute",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Context of presented entity.",
            "in": "header",
            "name": "context",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Use fallback for context",
            "in": "header",
            "name": "context-fallback",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSimpleAttributeRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          }
        },
        "summary": "Add product attribute.",
        "tags": [
          "Products attributes"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "ADD",
            "module": "ATTRIBUTES"
          }
        ]
      },
      "put": {
        "operationId": "updateProductAttributes",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "forceVla",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "description": "Context of presented entity.",
            "in": "header",
            "name": "context",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Use fallback for context",
            "in": "header",
            "name": "context-fallback",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "maxItems": 100,
                "minItems": 0,
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UpdateAttributeDto"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          }
        },
        "summary": "Update or set many attributes on product.",
        "tags": [
          "Products attributes"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "UPDATE",
            "module": "ATTRIBUTES"
          },
          {
            "accessType": "ADD",
            "module": "ATTRIBUTES"
          }
        ]
      }
    },
    "/products/{id}/attributes/column": {
      "post": {
        "operationId": "addColumnAttribute",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Context of presented entity.",
            "in": "header",
            "name": "context",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Use fallback for context",
            "in": "header",
            "name": "context-fallback",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ColumnAttributeValueAddRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          }
        },
        "summary": "Add column attribute.",
        "tags": [
          "Products attributes"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "ADD",
            "module": "ATTRIBUTES"
          }
        ]
      }
    },
    "/products/{id}/attributes/column/{definitionId}": {
      "put": {
        "operationId": "updateColumnAttribute",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "definitionId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "forceVla",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "description": "Context of presented entity.",
            "in": "header",
            "name": "context",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Use fallback for context",
            "in": "header",
            "name": "context-fallback",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ColumnAttributeValueDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          }
        },
        "summary": "Update column attribute.",
        "tags": [
          "Products attributes"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "UPDATE",
            "module": "ATTRIBUTES"
          }
        ]
      }
    },
    "/products/{id}/attributes/dictionary": {
      "post": {
        "operationId": "addDictionaryAttribute",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Context of presented entity.",
            "in": "header",
            "name": "context",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Use fallback for context",
            "in": "header",
            "name": "context-fallback",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DictionaryAttributeValueAddRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          }
        },
        "summary": "Add dictionary attribute.",
        "tags": [
          "Products attributes"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "ADD",
            "module": "ATTRIBUTES"
          }
        ]
      }
    },
    "/products/{id}/attributes/dictionary/{definitionId}/values": {
      "post": {
        "operationId": "setDictionaryAttributeValues",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "definitionId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "forceVla",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "description": "Context of presented entity.",
            "in": "header",
            "name": "context",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Use fallback for context",
            "in": "header",
            "name": "context-fallback",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetDictionaryValuesRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          }
        },
        "summary": "Set values for dictionary attribute.",
        "tags": [
          "Products attributes"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "UPDATE",
            "module": "ATTRIBUTES"
          }
        ]
      }
    },
    "/products/{id}/attributes/matrix": {
      "post": {
        "operationId": "addMatrixAttribute",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Context of presented entity.",
            "in": "header",
            "name": "context",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Use fallback for context",
            "in": "header",
            "name": "context-fallback",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MatrixAttributeValueAddRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          }
        },
        "summary": "Add matrix attribute.",
        "tags": [
          "Products attributes"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "ADD",
            "module": "ATTRIBUTES"
          }
        ]
      }
    },
    "/products/{id}/attributes/matrix/{definitionId}": {
      "put": {
        "operationId": "updateMatrixAttribute",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "definitionId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "forceVla",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "description": "Context of presented entity.",
            "in": "header",
            "name": "context",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Use fallback for context",
            "in": "header",
            "name": "context-fallback",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MatrixAttributeValueDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          }
        },
        "summary": "Update matrix attribute.",
        "tags": [
          "Products attributes"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "UPDATE",
            "module": "ATTRIBUTES"
          }
        ]
      }
    },
    "/products/{id}/attributes/{definitionId}": {
      "delete": {
        "operationId": "deleteProductAttribute",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "definitionId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          }
        },
        "summary": "Delete product attribute.",
        "tags": [
          "Products attributes"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "DELETE",
            "module": "ATTRIBUTES"
          }
        ]
      },
      "put": {
        "operationId": "updateProductAttribute",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "definitionId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "forceVla",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "description": "Context of presented entity.",
            "in": "header",
            "name": "context",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Use fallback for context",
            "in": "header",
            "name": "context-fallback",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AttributeValueValues"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          }
        },
        "summary": "Update product attribute.",
        "tags": [
          "Products attributes"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "UPDATE",
            "module": "ATTRIBUTES"
          }
        ]
      }
    },
    "/products/{id}/bundles": {
      "post": {
        "operationId": "createProductBundle",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "Create product bundle.",
        "tags": [
          "Products bundles"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "UPDATE",
            "module": "PRODUCTS"
          }
        ]
      }
    },
    "/products/{id}/bundles/{complementaryProductId}": {
      "delete": {
        "operationId": "deleteProductFromBundle",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "complementaryProductId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "Delete product from bundle.",
        "tags": [
          "Products bundles"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "UPDATE",
            "module": "PRODUCTS"
          }
        ]
      },
      "post": {
        "operationId": "addProductToBundle",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "complementaryProductId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductBundleRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "Add complementary product to bundle.",
        "tags": [
          "Products bundles"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "UPDATE",
            "module": "PRODUCTS"
          }
        ]
      },
      "put": {
        "operationId": "updateProductBundleQuantity",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "complementaryProductId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductBundleRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "Update product bundle quantity.",
        "tags": [
          "Products bundles"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "UPDATE",
            "module": "PRODUCTS"
          }
        ]
      }
    },
    "/products/{id}/bundles/{complementaryProductId}/order": {
      "put": {
        "operationId": "moveProductInBundle",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "complementaryProductId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "targetPosition",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "Change products's order in the bundle.",
        "tags": [
          "Products bundles"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "UPDATE",
            "module": "PRODUCTS"
          }
        ]
      }
    },
    "/products/{id}/categories": {
      "get": {
        "operationId": "getProductsCategories",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Archive state.",
            "in": "query",
            "name": "archiveState",
            "required": false,
            "schema": {
              "type": "string",
              "default": "active"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Number of page. default 0",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Size of page. default 1000",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListableString"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "List of category id the product is a child of.",
        "tags": [
          "Products categories"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "DETAILS",
            "module": "PRODUCTS"
          }
        ]
      },
      "post": {
        "operationId": "addProductToCategories",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CategoryReferenceRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "Adds product as a child of categories.",
        "tags": [
          "Products categories"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "PRODUCT_ASSOCIATE",
            "module": "CATALOG"
          }
        ]
      }
    },
    "/products/{id}/categories/{categoryId}": {
      "delete": {
        "operationId": "removeProductFromCategory",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "categoryId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "Removes product as a child of category.",
        "tags": [
          "Products categories"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "PRODUCT_ASSOCIATE",
            "module": "CATALOG"
          }
        ]
      }
    },
    "/products/{id}/connections": {
      "get": {
        "operationId": "getProductRelations",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Number of page. default 0",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Size of page. default 1000",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListableProductConnectionInfoResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "Show all relations with directions for product.",
        "tags": [
          "Products connections"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "DETAILS",
            "module": "PRODUCTS"
          }
        ]
      }
    },
    "/products/{id}/connections/categories": {
      "get": {
        "operationId": "getCategoryConnectionsForProduct",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Number of page. default 0",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Size of page. default 1000",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "description": "Archive state.",
            "in": "query",
            "name": "archiveState",
            "required": false,
            "schema": {
              "type": "string",
              "default": "active"
            }
          },
          {
            "description": "Context of presented entity.",
            "in": "header",
            "name": "context",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Use fallback for context",
            "in": "header",
            "name": "context-fallback",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListableGroupedCategoryConnectionResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "Show all connections for categories.",
        "tags": [
          "Products connections"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "DETAILS",
            "module": "PRODUCTS"
          }
        ]
      },
      "post": {
        "operationId": "createCategoryConnection",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductConnectionRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "Create new connection between products and categories.",
        "tags": [
          "Products connections"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "ADD",
            "module": "CONNECTIONS"
          }
        ]
      }
    },
    "/products/{id}/connections/categories/{relationId}/{categoryId}": {
      "delete": {
        "operationId": "deleteCategoryConnection",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "relationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "categoryId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "Delete connection between products and categories.",
        "tags": [
          "Products connections"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "DELETE",
            "module": "CONNECTIONS"
          }
        ]
      }
    },
    "/products/{id}/connections/products": {
      "get": {
        "deprecated": true,
        "description": "This endpoint is deprecated and will be removed soon. Please use 2 other endpoints instead of that one. \n\nGET /products/{id}/connections/products/{relationId} Retrieve related products for given product and relation.\n\n GET /products/{id}/connections Show all relations with directions for product.",
        "operationId": "getProductConnectionsForProduct",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Number of page. default 0",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Size of page. default 1000",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "description": "Archive state.",
            "in": "query",
            "name": "archiveState",
            "required": false,
            "schema": {
              "type": "string",
              "default": "active"
            }
          },
          {
            "description": "Context of presented entity.",
            "in": "header",
            "name": "context",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Use fallback for context",
            "in": "header",
            "name": "context-fallback",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListableGroupedProductConnectionResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "Show all connections for product.",
        "tags": [
          "Products connections"
        ],
        "x-bluestone-api-gateway-hidden": true,
        "x-bluestone-deprecated-since": "2022.12.01",
        "x-bluestone-permission": [
          {
            "accessType": "DETAILS",
            "module": "PRODUCTS"
          }
        ]
      },
      "post": {
        "operationId": "createProductConnection",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductConnectionRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "Create new connection between products.",
        "tags": [
          "Products connections"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "ADD",
            "module": "CONNECTIONS"
          }
        ]
      }
    },
    "/products/{id}/connections/products/order/relations/sortingOrderSource/{sortingOrderSource}": {
      "put": {
        "operationId": "updateRelatedProductsRelationSortingOrderSource",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "sortingOrderSource",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "RELATION_DEFINITION",
                "PRODUCT"
              ]
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "Update related products relation sorting order source.",
        "tags": [
          "Products connections"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "UPDATE",
            "module": "CONNECTIONS"
          }
        ]
      }
    },
    "/products/{id}/connections/products/{relationId}": {
      "delete": {
        "operationId": "deleteProductConnectionsByRelation",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "relationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "Delete all connections between products based on a given relation.",
        "tags": [
          "Products connections"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "DELETE",
            "module": "CONNECTIONS"
          }
        ]
      },
      "get": {
        "operationId": "getProductForRelation",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "relationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "direction",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "DIRECT",
                "REVERSE"
              ]
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Number of page. default 0",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Size of page. default 1000",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListableProductConnectionProductResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "Retrieve related products for given product and relation.",
        "tags": [
          "Products connections"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "DETAILS",
            "module": "CONNECTIONS"
          }
        ]
      },
      "post": {
        "operationId": "createProductConnections",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "relationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "maxItems": 1000,
                "minItems": 1,
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProductConnectionsRequest"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "Create new connections between products.",
        "tags": [
          "Products connections"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "ADD",
            "module": "CONNECTIONS"
          }
        ]
      }
    },
    "/products/{id}/connections/products/{relationId}/bulk": {
      "delete": {
        "operationId": "deleteManyProductConnections",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "relationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "maxItems": 1000,
                "minItems": 1,
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProductConnectionsRemovalRequest"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "Remove multiple connections from the given product.",
        "tags": [
          "Products connections"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "DELETE",
            "module": "CONNECTIONS"
          }
        ]
      }
    },
    "/products/{id}/connections/products/{relationId}/order": {
      "put": {
        "operationId": "updateOrderProductRelation",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "relationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "targetPosition",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "Update order product relations.",
        "tags": [
          "Products connections"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "UPDATE",
            "module": "CONNECTIONS"
          }
        ]
      }
    },
    "/products/{id}/connections/products/{relationId}/{connectedProductId}": {
      "delete": {
        "operationId": "deleteProductConnection",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "relationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "connectedProductId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "Delete connection between products.",
        "tags": [
          "Products connections"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "DELETE",
            "module": "CONNECTIONS"
          }
        ]
      }
    },
    "/products/{id}/connections/products/{relationId}/{connectedProductId}/order": {
      "put": {
        "operationId": "updateOrderProductConnections",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "relationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "connectedProductId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "targetPosition",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "in": "query",
            "name": "direction",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "DIRECT",
                "REVERSE"
              ]
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "Update order product connections.",
        "tags": [
          "Products connections"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "UPDATE",
            "module": "CONNECTIONS"
          }
        ]
      }
    },
    "/products/{id}/connections/{rightProductId}/{relationId}": {
      "put": {
        "operationId": "updateConnectionQuantity",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "rightProductId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "relationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductConnectionUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "Update connection quantity.",
        "tags": [
          "Products connections"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "UPDATE",
            "module": "CONNECTIONS"
          }
        ]
      }
    },
    "/products/{id}/copy": {
      "post": {
        "operationId": "copyProduct",
        "parameters": [
          {
            "description": "Product Id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Context of presented entity.",
            "in": "header",
            "name": "context",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Location": {
                "description": "Location URI",
                "schema": {
                  "type": "string"
                }
              },
              "Resource-Id": {
                "description": "Entity identifier",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Conflict"
          }
        },
        "summary": "Create a copy of product.",
        "tags": [
          "Products"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "COPY",
            "module": "PRODUCTS"
          }
        ]
      }
    },
    "/products/{id}/get/views": {
      "post": {
        "operationId": "findProductViewsById",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Archive state.",
            "in": "query",
            "name": "archiveState",
            "required": false,
            "schema": {
              "type": "string",
              "default": "active"
            }
          },
          {
            "description": "Context of presented entity.",
            "in": "header",
            "name": "context",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Use fallback for context",
            "in": "header",
            "name": "context-fallback",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductIdViewsRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductViewDto"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "Show product filtered by id with view.",
        "tags": [
          "Products"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "DETAILS",
            "module": "PRODUCTS"
          }
        ]
      }
    },
    "/products/{id}/groupedAttributes": {
      "get": {
        "operationId": "getGroupedProductAttributes",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Archive state.",
            "in": "query",
            "name": "archiveState",
            "required": false,
            "schema": {
              "type": "string",
              "default": "active"
            }
          },
          {
            "description": "Context of presented entity.",
            "in": "header",
            "name": "context",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Use fallback for context",
            "in": "header",
            "name": "context-fallback",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListableGroupedAttributeValuesDto"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          }
        },
        "summary": "Get grouped product attributes.",
        "tags": [
          "Products attributes"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "LIST",
            "module": "ATTRIBUTES"
          }
        ]
      }
    },
    "/products/{id}/labels": {
      "get": {
        "operationId": "getProductsLabels",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Archive state.",
            "in": "query",
            "name": "archiveState",
            "required": false,
            "schema": {
              "type": "string",
              "default": "active"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Number of page. default 0",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Size of page. default 1000",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListableString"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "Show list of associated product's label ids.",
        "tags": [
          "Products labels"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "DETAILS",
            "module": "PRODUCTS"
          }
        ]
      },
      "post": {
        "operationId": "addLabelsToProduct",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LabelReferenceRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "Associate given labels with product.",
        "tags": [
          "Products labels"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "UPDATE",
            "module": "PRODUCTS"
          }
        ]
      }
    },
    "/products/{id}/labels/{labelId}": {
      "delete": {
        "operationId": "removeLabelFromProduct",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "labelId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "Remove associated labels from product.",
        "tags": [
          "Products labels"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "DELETE",
            "module": "PRODUCTS"
          }
        ]
      }
    },
    "/products/{id}/touch": {
      "put": {
        "deprecated": true,
        "operationId": "touchProduct",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "Allows to republish product without making in it any changes.",
        "tags": [
          "Products"
        ],
        "x-bluestone-api-gateway-hidden": true,
        "x-bluestone-deprecated-since": "2022.07.04",
        "x-bluestone-internal": true,
        "x-bluestone-permission": [
          {
            "accessType": "UPDATE",
            "module": "PRODUCTS"
          }
        ]
      }
    },
    "/products/{id}/variants": {
      "post": {
        "operationId": "setProductGroup",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "Create variant group.",
        "tags": [
          "Product variants"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "ADD",
            "module": "PRODUCTS"
          }
        ]
      }
    },
    "/products/{id}/variants/attributes/{definitionId}": {
      "get": {
        "operationId": "getProductVariantAttribute",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "definitionId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductVariantAttributeDto"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "Get product variant attribute.",
        "tags": [
          "Product variants"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "DETAILS",
            "module": "ATTRIBUTES"
          }
        ]
      },
      "put": {
        "operationId": "updateProductVariantAttribute",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "definitionId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "forceVla",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductVariantAttributeDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "Update product variant attribute.",
        "tags": [
          "Product variants"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "UPDATE",
            "module": "ATTRIBUTES"
          }
        ]
      }
    },
    "/products/{id}/variants/{variantProductId}": {
      "delete": {
        "operationId": "unassignProductVariant",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "variantProductId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "Unassign given product variant from variant group.",
        "tags": [
          "Product variants"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "DELETE",
            "module": "PRODUCTS"
          }
        ]
      },
      "put": {
        "operationId": "addProductVariant",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "variantProductId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "Assign product as a variant of parent product.",
        "tags": [
          "Product variants"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "UPDATE",
            "module": "PRODUCTS"
          }
        ]
      }
    },
    "/products/{id}/variants/{variantProductId}/order": {
      "put": {
        "operationId": "moveProductVariant",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "variantProductId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "targetPosition",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "Change variant's order.",
        "tags": [
          "Product variants"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "UPDATE",
            "module": "PRODUCTS"
          }
        ]
      }
    },
    "/products/{id}/{action}": {
      "post": {
        "operationId": "changeStatus",
        "parameters": [
          {
            "description": "Product Id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "action",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "PUBLISH",
                "UNPUBLISH",
                "ARCHIVE",
                "UNARCHIVE",
                "SYNC",
                "CONNECT",
                "DISCONNECT"
              ]
            }
          },
          {
            "description": "Context of presented entity.",
            "in": "header",
            "name": "context",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "Change products state.",
        "tags": [
          "Products"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "UPDATE",
            "module": "PRODUCTS"
          }
        ]
      }
    },
    "/relations": {
      "get": {
        "operationId": "find",
        "parameters": [
          {
            "allowEmptyValue": true,
            "description": "Number of page. default 0",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Size of page. default 1000",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "description": "Context of presented entity.",
            "in": "header",
            "name": "context",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Use fallback for context",
            "in": "header",
            "name": "context-fallback",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListableRelationResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          }
        },
        "summary": "Show all relations.",
        "tags": [
          "Relations"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "LIST",
            "module": "RELATIONS"
          }
        ]
      },
      "post": {
        "operationId": "create",
        "parameters": [
          {
            "description": "Context of presented entity.",
            "in": "header",
            "name": "context",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RelationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Location": {
                "description": "Location URI",
                "schema": {
                  "type": "string"
                }
              },
              "Resource-Id": {
                "description": "Entity identifier",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Conflict"
          }
        },
        "summary": "Create new relation.",
        "tags": [
          "Relations"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "ADD",
            "module": "RELATIONS"
          }
        ]
      }
    },
    "/relations/list": {
      "post": {
        "operationId": "getFilteredRelations",
        "parameters": [
          {
            "description": "Context of presented entity.",
            "in": "header",
            "name": "context",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Use fallback for context",
            "in": "header",
            "name": "context-fallback",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RelationFilteringRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListableRelationResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          }
        },
        "summary": "Filter relations.",
        "tags": [
          "Relations"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "LIST",
            "module": "RELATIONS"
          }
        ]
      }
    },
    "/relations/{id}": {
      "delete": {
        "operationId": "delete",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "force",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "Delete relation.",
        "tags": [
          "Relations"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "DELETE",
            "module": "RELATIONS"
          }
        ]
      },
      "get": {
        "operationId": "findOne",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Context of presented entity.",
            "in": "header",
            "name": "context",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Use fallback for context",
            "in": "header",
            "name": "context-fallback",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RelationResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "Show relation details.",
        "tags": [
          "Relations"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "DETAILS",
            "module": "RELATIONS"
          }
        ]
      },
      "put": {
        "operationId": "update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Context of presented entity.",
            "in": "header",
            "name": "context",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RelationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Conflict"
          }
        },
        "summary": "Update relation.",
        "tags": [
          "Relations"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "UPDATE",
            "module": "RELATIONS"
          }
        ]
      }
    },
    "/relations/{id}/categories/connections": {
      "get": {
        "operationId": "getCategoryConnectionsByRelationId",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Number of page. default 0",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Size of page. default 1000",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "description": "Context of presented entity.",
            "in": "header",
            "name": "context",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Use fallback for context",
            "in": "header",
            "name": "context-fallback",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListableCategoryConnectionResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          }
        },
        "summary": "Show all categories connections using relation.",
        "tags": [
          "Relations"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "DETAILS",
            "module": "RELATIONS"
          }
        ]
      }
    },
    "/relations/{id}/order": {
      "put": {
        "operationId": "updateOrderRelation",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "targetPosition",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "Update relation order.",
        "tags": [
          "Relations"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "UPDATE",
            "module": "RELATIONS"
          }
        ]
      }
    },
    "/relations/{id}/policy": {
      "get": {
        "operationId": "getByRelationId",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Number of page. default 0",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Size of page. default 1000",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListablePolicyDto"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "Get relation policies.",
        "tags": [
          "Relation policy"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "READ",
            "module": "DETAILED_PERMISSION"
          }
        ]
      },
      "post": {
        "operationId": "addPolicy",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PolicyRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "Add policy to the relation.",
        "tags": [
          "Relation policy"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "WRITE",
            "module": "DETAILED_PERMISSION"
          }
        ]
      }
    },
    "/relations/{id}/policy/{policyId}/{policyType}": {
      "delete": {
        "operationId": "deletePolicy",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "policyId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "policyType",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "READ",
                "WRITE"
              ]
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not found"
          }
        },
        "summary": "Delete policy.",
        "tags": [
          "Relation policy"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "WRITE",
            "module": "DETAILED_PERMISSION"
          }
        ]
      }
    },
    "/relations/{id}/products/connections": {
      "get": {
        "operationId": "getProductConnectionsByRelationId",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Number of page. default 0",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Size of page. default 1000",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "description": "Context of presented entity.",
            "in": "header",
            "name": "context",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Use fallback for context",
            "in": "header",
            "name": "context-fallback",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListableProductConnectionResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          }
        },
        "summary": "Show all product connections using relation.",
        "tags": [
          "Relations"
        ],
        "x-bluestone-permission": [
          {
            "accessType": "DETAILS",
            "module": "RELATIONS"
          }
        ]
      }
    },
    "/technical/version": {
      "get": {
        "operationId": "getVersion",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PimVersion"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          }
        },
        "summary": "Show service version.",
        "tags": [
          "Technical"
        ]
      }
    },
    "/validate/definitions": {
      "post": {
        "operationId": "validateAttribute",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AttributeValidationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttributeValidationResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          }
        },
        "summary": "Validates attribute definitions.",
        "tags": [
          "Validation"
        ]
      }
    },
    "/validate/product": {
      "post": {
        "operationId": "validateProducts",
        "parameters": [
          {
            "description": "Context of presented entity.",
            "in": "header",
            "name": "context",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Use fallback for context",
            "in": "header",
            "name": "context-fallback",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProductValidationRequest"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductValidationIssueResponse"
                  }
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          }
        },
        "summary": "Validates list of products.",
        "tags": [
          "Validation"
        ]
      }
    },
    "/validate/value": {
      "post": {
        "operationId": "validateValue",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValueValidationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValueValidationResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          }
        },
        "summary": "Validates attribute value.",
        "tags": [
          "Validation"
        ]
      }
    }
  },
  "info": {
    "description": "Bluestone PIM API",
    "title": "bluestone-pim",
    "version": "3.0.0"
  },
  "tags": [
    {
      "description": "To interact with catalog nodes.",
      "name": "Catalog nodes"
    },
    {
      "description": "To interact with product policy.",
      "name": "Product policy"
    },
    {
      "description": "Maintenance tasks.",
      "name": "Maintenance"
    },
    {
      "description": "To interact with catalog node attributes.",
      "name": "Catalog node attributes"
    },
    {
      "description": "To handle background job statuses.",
      "name": "Bulk"
    },
    {
      "description": "To interact with attribute groups.",
      "name": "Attribute groups"
    },
    {
      "description": "To interact with attribute definition policy.",
      "name": "Attribute definition policies"
    },
    {
      "description": "Controller to remove organization data.",
      "name": "Organization"
    },
    {
      "description": "To interact with products categories.",
      "name": "Products categories"
    },
    {
      "description": "Validation services.",
      "name": "Validation"
    },
    {
      "description": "To interact with Catalogs.",
      "name": "Catalogs"
    },
    {
      "description": "To interact with products bundles.",
      "name": "Products bundles"
    },
    {
      "description": "To interact with products.",
      "name": "Products"
    },
    {
      "description": "To interact with products templates.",
      "name": "Products templates"
    },
    {
      "description": "To interact with products assets.",
      "name": "Products assets"
    },
    {
      "description": "To interact with products attributes.",
      "name": "Products attributes"
    },
    {
      "description": "To interact with products connections.",
      "name": "Products connections"
    },
    {
      "description": "To interact with category policy.",
      "name": "Category policy"
    },
    {
      "description": "To interact with compound attribute definitions.",
      "name": "Compound attribute definitions"
    },
    {
      "description": "To interact with products labels.",
      "name": "Products labels"
    },
    {
      "description": "To interact with attribute definitions.",
      "name": "Attribute definitions"
    },
    {
      "description": "To interact with relation policy.",
      "name": "Relation policy"
    },
    {
      "description": "To interact with Relations.",
      "name": "Relations"
    },
    {
      "description": "To interact with products variants.",
      "name": "Product variants"
    }
  ]
}
